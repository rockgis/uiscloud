var UTIL;!function(UTIL){function getBrowserInfo(){var info=new Browser;if(new RegExp("msie","i").test(navigator.userAgent)){info.msie=!0;info.version=parseInt(navigator.userAgent.match(/(msie)\s[0-9|.]*/gi).toString().replace(/(msie)\s/gi,"").replace(/\..*[0-9]+$/gi,""))}else if(new RegExp("chrome","i").test(navigator.userAgent)){info.chrome=!0;info.version=parseInt(navigator.userAgent.match(/(chrome)\/[0-9|\.]*/gi).toString().replace(/(chrome)\//gi,"").replace(/\..*[0-9]+$/gi,""))}else if(new RegExp("safari","i").test(navigator.userAgent)){info.safari=!0;info.version=parseInt(navigator.userAgent.match(/(safari)\/[0-9|\.]*/gi).toString().replace(/(safari)\//gi,"").replace(/\..*[0-9]+$/gi,""))}else if(new RegExp("firefox","i").test(navigator.userAgent)){info.firefox=!0;info.version=parseInt(navigator.userAgent.match(/(firefox)\/[0-9|\.]*/gi).toString().replace(/(firefox)\//gi,"").replace(/\..*[0-9]+$/gi,""))}return info}function trim(input){return getBrowserInfo().msie&&getBrowserInfo().version<9?input.replace(/(^\s*)|(\s*$)/g,""):input.trim()}function loadJavascripts(uris,callback){if("undefined"!=typeof uris&&null!=uris)if(uris instanceof Array&&uris.length>0){var temp=_.first(uris),uris=_.rest(uris);UTIL.loadJavascript(temp,function(){UTIL.loadJavascripts(uris,callback)})}else"function"==typeof callback&&null!=callback&&callback()}function loadJavascript(uri,callback){var head=document.getElementsByTagName("head")[0],element=document.createElement("script");element.setAttribute("type","text/javascript");element.setAttribute("src",uri);if("function"==typeof callback&&null!=callback){var loaded=!1;element.onreadystatechange=function(){if("loaded"==this.readyState||"complete"==this.readyState){if(loaded)return;loaded=!0;console.log("loadedJavascript :: "+uri);callback()}};element.onload=function(){console.log("loadedJavascript :: "+uri);callback()}}head.appendChild(element)}function loadStylesheets(uris,callback){if("undefined"!=typeof uris&&null!=uris)if(uris instanceof Array&&uris.length>0){var temp=_.first(uris),uris=_.rest(uris);UTIL.loadStylesheet(temp,function(){UTIL.loadStylesheets(uris,callback)})}else"function"==typeof callback&&null!=callback&&callback()}function loadStylesheet(uri,callback){var head=document.getElementsByTagName("head")[0],element=document.createElement("link");element.setAttribute("rel","stylesheet");element.setAttribute("type","text/css");element.setAttribute("href",uri);if("function"==typeof callback&&null!=callback){var loaded=!1;element.onreadystatechange=function(){if("loaded"==this.readyState||"complete"==this.readyState){if(loaded)return;loaded=!0;console.log("loadedStylesheet :: "+uri);callback()}};element.onload=function(){console.log("loadedStylesheet :: "+uri);callback()}}head.appendChild(element)}function appendStyle(css){var head=document.getElementsByTagName("head")[0],style=document.createElement("style");style.setAttribute("type","text/css");style.styleSheet?style.styleSheet.cssText=css:style.appendChild(document.createTextNode(css));head.appendChild(style)}var Browser=function(){function Browser(){this.msie=!1;this.chrome=!1;this.safari=!1;this.firefox=!1}return Browser}();UTIL.Browser=Browser;UTIL.getBrowserInfo=getBrowserInfo;UTIL.trim=trim;UTIL.loadJavascripts=loadJavascripts;UTIL.loadJavascript=loadJavascript;UTIL.loadStylesheets=loadStylesheets;UTIL.loadStylesheet=loadStylesheet;UTIL.appendStyle=appendStyle}(UTIL||(UTIL={}));define("UTIL",function(){});var contextMenu=contextMenu||function(){function initialize(opts){options=$.extend({},options,opts);if("undefined"!=typeof options.clickExtend&&null!=options.clickExtend){var clickTarget=[];"string"==typeof options.clickExtend?clickTarget.push(options.clickExtend):options.clickExtend instanceof Array&&(clickTarget=options.clickExtend);for(var i in clickTarget){var item=clickTarget[i];$(item).click(function(){$(".dropdown-context").fadeOut(options.fadeSpeed,function(){$(".dropdown-context").css({display:""}).find(".drop-left").removeClass("drop-left")})})}}$(document).on("click","html",function(){$(".dropdown-context").fadeOut(options.fadeSpeed,function(){$(".dropdown-context").css({display:""}).find(".drop-left").removeClass("drop-left")})});options.preventDoubleContext&&$(document).on("contextmenu",".dropdown-context",function(e){e.preventDefault()});$(document).on("mouseenter",".dropdown-submenu",function(){var $sub=$(this).find(".dropdown-context-sub:first"),subWidth=$sub.width(),subLeft=$sub.offset().left,collision=subWidth+subLeft>window.innerWidth;collision&&$sub.addClass("drop-left")})}function updateOptions(opts){options=$.extend({},options,opts)}function buildMenu(data,id,subMenu){var subClass=subMenu?" dropdown-context-sub":"",compressed=options.compress?" compressed-context":"",$menu=$('<ul class="dropdown-menu dropdown-context'+subClass+compressed+'" id="dropdown-'+id+'"></ul>'),i=0,linkTarget="";for(i;i<data.length;i++){if("undefined"!=typeof data[i].divider)$menu.append('<li class="divider"></li>');else if("undefined"!=typeof data[i].header)$menu.append('<li class="nav-header">'+data[i].header+"</li>");else{"undefined"==typeof data[i].href&&(data[i].href="#");"undefined"!=typeof data[i].target&&(linkTarget=' target="'+data[i].target+'"');$sub="undefined"!=typeof data[i].subMenu?'<li class="dropdown-submenu"><a tabindex="-1" href="'+data[i].href+'">'+data[i].text+"</a></li>":$('<li><a tabindex="-1" href="'+data[i].href+'"'+linkTarget+">"+data[i].text+"</a></li>");if("undefined"!=typeof data[i].action){var actiond=new Date,actionID="event-"+actiond.getTime()*Math.floor(1e5*Math.random()),eventAction=data[i].action;$sub.find("a").attr("id",actionID);$("#"+actionID).addClass("context-event");$(document).on("click","#"+actionID,eventAction)}$menu.append($sub);if("undefined"!=typeof data[i].subMenu){var subMenuData=buildMenu(data[i].subMenu,id,!0);$menu.find("li:last").append(subMenuData)}}"function"==typeof options.filter&&options.filter($menu.find("li:last"))}return $menu}function addContext(selector,data,isClear){"boolean"==typeof isClear&&isClear&&$(".dropdown-menu").remove();var d=new Date,id=d.getTime(),$menu=buildMenu(data,id);$("body").append($menu);$(document).on("contextmenu",selector,function(e){e.preventDefault();e.stopPropagation();$(".dropdown-context:not(.dropdown-context-sub)").hide();$dd=$("#dropdown-"+id);if("boolean"==typeof options.above&&options.above)$dd.addClass("dropdown-context-up").css({top:e.pageY-20-$("#dropdown-"+id).height(),left:e.pageX-13}).fadeIn(options.fadeSpeed);else if("string"==typeof options.above&&"auto"==options.above){$dd.removeClass("dropdown-context-up");var autoH=$dd.height()+12;e.pageY+autoH>$("html").height()?$dd.addClass("dropdown-context-up").css({top:e.pageY-20-autoH,left:e.pageX-13}).fadeIn(options.fadeSpeed):$dd.css({top:e.pageY+10,left:e.pageX-13}).fadeIn(options.fadeSpeed)}})}function onContext(event,data,isClear){"boolean"==typeof isClear&&isClear&&$(".dropdown-menu").remove();var d=new Date,id=d.getTime(),$menu=buildMenu(data,id);$("body").append($menu);event.preventDefault();event.stopPropagation();$(".dropdown-context:not(.dropdown-context-sub)").hide();$dd=$("#dropdown-"+id);if("boolean"==typeof options.above&&options.above)$dd.addClass("dropdown-context-up").css({top:event.pageY-20-$("#dropdown-"+id).height(),left:event.pageX-13}).fadeIn(options.fadeSpeed);else if("string"==typeof options.above&&"auto"==options.above){$dd.removeClass("dropdown-context-up");var autoH=$dd.height()+12;event.pageY+autoH>$("html").height()?$dd.addClass("dropdown-context-up").css({top:event.pageY-20-autoH,left:event.pageX-13}).fadeIn(options.fadeSpeed):$dd.css({top:event.pageY+10,left:event.pageX-13}).fadeIn(options.fadeSpeed)}}function destroyContext(selector){$(document).off("contextmenu",selector).off("click",".context-event");clickTarget=[];"string"==typeof options.clickExtend?clickTarget.push(options.clickExtend):options.clickExtend instanceof Array&&(clickTarget=options.clickExtend);for(var i in clickTarget){var item=clickTarget[i];$(item).off("click")}$(".dropdown-menu").remove()}var options={fadeSpeed:100,filter:function(){},above:"auto",preventDoubleContext:!0,compress:!1};return{init:initialize,settings:updateOptions,attach:addContext,destroy:destroyContext,on:onContext}}();define("contextMenu",function(){});var GeoNURIS;!function(GeoNURIS){var ServerInfo=function(){function ServerInfo(host,port,context,gdx,options){this.isCapabilitySupport=!1;this.isCache=!1;this.wmsLayerOptions={};this.staticLayers=[];this.autoVisible=!0;this.host=host;this.port=port;this.context=context;this.gdx=gdx;this.id=_.uniqueId("info_");if("undefined"!=typeof options&&null!=options){var opts=options;if("undefined"!=typeof opts.tileSize&&null!=opts.tileSize){var tileSize=opts.tileSize;"number"==typeof tileSize.width&&"number"==typeof tileSize.height&&(this.wmsLayerOptions.tileSize=new OpenLayers.Size(tileSize.width,tileSize.height))}if("undefined"!=typeof opts.maxExtent&&null!=opts.maxExtent){var maxExtent=opts.maxExtent;"number"==typeof maxExtent.left&&"number"==typeof maxExtent.bottom&&"number"==typeof maxExtent.right&&"number"==typeof maxExtent.top&&(this.wmsLayerOptions.maxExtent=[maxExtent.left,maxExtent.bottom,maxExtent.right,maxExtent.top])}"string"==typeof opts.projection&&(this.wmsLayerOptions.projection=opts.projection);"number"==typeof opts.zoomLevel&&(this.wmsLayerOptions.numZoomLevels=opts.zoomLevel);"number"==typeof opts.buffer&&(this.wmsLayerOptions.buffer=opts.buffer);"boolean"==typeof opts.singleTile&&(this.wmsLayerOptions.singleTile=opts.singleTile);if(opts.cacheKey&&opts.zoomLevel&&opts.maxResolution&&opts.maxExtent&&opts.tileSize){this.cacheKey=opts.cacheKey;this.isCache=!0;this.wmsLayerOptions.maxResolution=opts.maxResolution}"boolean"==typeof opts.autoVisible&&(this.autoVisible=opts.autoVisible);"boolean"==typeof opts.isCapabilitySupport&&(this.isCapabilitySupport=opts.isCapabilitySupport);"undefined"!=typeof opts.layers&&(this.staticLayers=opts.layers)}}ServerInfo.prototype.getStaticLayers=function(){return this.staticLayers};ServerInfo.prototype.getURI=function(type){var baseURI="http://"+this.host+":"+this.port+this.context;if(!type)return baseURI;if("wfs"==UTIL.trim(type.toLowerCase()))return baseURI+"/wfs?GDX="+this.gdx+"&";if("wms"==UTIL.trim(type.toLowerCase())){var wmsURI=baseURI+"/wms?GDX="+this.gdx+"&";return this.isCache?wmsURI+"CACHE_KEY="+this.cacheKey+"&":wmsURI}};ServerInfo.prototype.getID=function(){return this.id};ServerInfo.prototype.getGDXName=function(isExtension){return this.gdx?"undefined"!=typeof isExtension&&isExtension?this.gdx:this.gdx.replace(".xml","").replace(/\./gi,"_"):"unknow"};ServerInfo.prototype.getWMSLayerOptions=function(){return this.wmsLayerOptions};return ServerInfo}();GeoNURIS.ServerInfo=ServerInfo}(GeoNURIS||(GeoNURIS={}));define("ServerInfo",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var CustomServerInfo=function(_super){function CustomServerInfo(options){_super.call(this,"",80,"","",options);this.provider="OSM";this.serviceType="";if("undefined"!=typeof options&&null!=options){var opt=options;"string"==typeof opt.provider&&null!=opt.provider&&(this.provider=opt.provider);"string"==typeof opt.serviceType&&null!=opt.serviceType?this.serviceType=opt.serviceType:("google"==this.provider.toLowerCase()||"g"==this.provider.toLowerCase())&&(this.serviceType="Streets")}}__extends(CustomServerInfo,_super);CustomServerInfo.prototype.getURI=function(){return this.provider+"_"+this.serviceType};CustomServerInfo.prototype.getID=function(){return this.id};CustomServerInfo.prototype.getGDXName=function(){return this.provider+"_"+this.serviceType};return CustomServerInfo}(GeoNURIS.ServerInfo);GeoNURIS.CustomServerInfo=CustomServerInfo}(GeoNURIS||(GeoNURIS={}));define("CustomServerInfo",function(){});var GeoNURIS;!function(GeoNURIS){var BaseLayer=function(){function BaseLayer(serverInfo,name,title,projection){this.visibility=!0;this.serverInfo=serverInfo;this.name=name;this.title=title;this.projection=projection;this.id=_.uniqueId("layer_")}BaseLayer.prototype.getWFSProtocol=function(){return new OpenLayers.Protocol.WFS({version:"1.1.0",url:this.getURI("wfs"),featureType:this.name,schema:this.getURI("wfs")+"SERVICE=WFS&VERSION=1.1.0&REQUEST=DescribeFeatureType&TYPENAME="+this.name,srsName:this.projection})};BaseLayer.prototype.getURI=function(type){return this.serverInfo.getURI(type)};BaseLayer.prototype.getVisibility=function(){return this.visibility};BaseLayer.prototype.setVisibility=function(isVisible){console.log("base");this.visibility=isVisible};return BaseLayer}();GeoNURIS.BaseLayer=BaseLayer}(GeoNURIS||(GeoNURIS={}));define("BaseLayer",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var Layer=function(_super){function Layer(serverInfo,name,title,projection){_super.call(this,serverInfo,name,title,projection);this.isGroup=!1;this.zIndex=-1}__extends(Layer,_super);Layer.prototype.setZIndex=function(zIndex){this.zIndex=zIndex;this.redraw()};Layer.prototype.setVisibility=function(isVisible){console.log("layer");_super.prototype.setVisibility.call(this,isVisible);this.redraw()};Layer.prototype.redraw=function(){console.log("redraw is not defined")};return Layer}(GeoNURIS.BaseLayer);GeoNURIS.Layer=Layer}(GeoNURIS||(GeoNURIS={}));define("Layer",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var GroupLayer=function(_super){function GroupLayer(serverInfo,name,title,subLayers,isGroup){_super.call(this,serverInfo,name,title,"unknown");this.id=_.uniqueId("group_layer_");null!=subLayers&&(this.subLayers=subLayers);isGroup&&(this.isGroup=isGroup)}__extends(GroupLayer,_super);GroupLayer.prototype.getGroupLayers=function(options){var filter=_.filter(this.subLayers,function(obj){return"undefined"!=typeof options&&"undefined"!=typeof options.isVisibleOnly&&options.isVisibleOnly?obj.isGroup&&obj.getVisibility():obj.isGroup});return"undefined"!=typeof options&&"undefined"!=typeof options.isSort&&options.isSort?_.sortBy(filter,function(obj){return obj.zIndex}):filter};GroupLayer.prototype.getLayers=function(options){var filter=_.filter(this.subLayers,function(obj){return"undefined"!=typeof options&&"undefined"!=typeof options.isVisibleOnly&&options.isVisibleOnly?0==obj.isGroup&&obj.getVisibility():0==obj.isGroup});return"undefined"!=typeof options&&"undefined"!=typeof options.isSort&&options.isSort?_.sortBy(filter,function(obj){return obj.zIndex}):filter};GroupLayer.prototype.getSubLayers=function(options){var filter=_.filter(this.subLayers,function(obj){return"undefined"!=typeof options&&"undefined"!=typeof options.isVisibleOnly&&options.isVisibleOnly?obj.getVisibility():!0});return"undefined"!=typeof options&&"undefined"!=typeof options.isSort&&options.isSort?_.sortBy(filter,function(obj){return obj.zIndex}):filter};GroupLayer.prototype.getGroupLayerIDs=function(isVisibleOnly){return _.pluck(this.getGroupLayers({isVisibleOnly:isVisibleOnly}),"id")};GroupLayer.prototype.getGroupLayer=function(id){return _.findWhere(this.getGroupLayers(),{id:id})};GroupLayer.prototype.getGroupLayerNames=function(isVisibleOnly){return _.pluck(this.getGroupLayers({isVisibleOnly:isVisibleOnly}),"name")};GroupLayer.prototype.getGroupLayerforName=function(name){return _.filter(this.getGroupLayers(),function(obj){return obj.name==name})};GroupLayer.prototype.getLayerIDs=function(isVisibleOnly){return _.pluck(this.getLayers({isVisibleOnly:isVisibleOnly}),"id")};GroupLayer.prototype.getLayer=function(id){return _.findWhere(this.getLayers(),{id:id})};GroupLayer.prototype.getLayerNames=function(isVisibleOnly){return _.pluck(this.getLayers({isVisibleOnly:isVisibleOnly}),"name")};GroupLayer.prototype.getLayerforName=function(name){return _.filter(this.getLayers(),function(obj){return obj.name==name})};GroupLayer.prototype.getWFSProtocol=function(){return null};return GroupLayer}(GeoNURIS.Layer);GeoNURIS.GroupLayer=GroupLayer}(GeoNURIS||(GeoNURIS={}));define("GroupLayer",function(){});var GeoNURIS;!function(GeoNURIS){var Service=function(){function Service(serverInfo){this.rootLayer=null;this.serverInfo=serverInfo;this.id=_.uniqueId("service_");this.initService(this.serverInfo)}Service.prototype.getServiceLayer=function(){return this.wmsLayer};Service.prototype.getLayerIDs=function(isVisibleOnly){return _.map(this.getAllLayers(isVisibleOnly),function(obj){return obj.id})};Service.prototype.getLayer=function(id){return _.findWhere(this.getAllLayers(!1),{id:id})};Service.prototype.getLayerNames=function(isVisibleOnly){return _.map(this.getAllLayers(isVisibleOnly),function(obj){return obj.name})};Service.prototype.getLayerforName=function(name){return _.filter(this.getAllLayers(!1),function(obj){return obj.name==name})};Service.prototype.getAllLayers=function(isVisibleOnly){var tempAllLayers=[];if("undefined"!=typeof this.rootLayer&&null!=this.rootLayer){var tempSubLayers=this.rootLayer.getSubLayers({isVisibleOnly:isVisibleOnly,isSort:!0});for(var i in tempSubLayers){var tempLayer=tempSubLayers[i];this.reflectionSubLayers(tempLayer,tempAllLayers,isVisibleOnly)}}return tempAllLayers};Service.prototype.reflectionSubLayers=function(layer,allLayers,isVisibleOnly){if(layer.isGroup){var tempLayers=layer.getSubLayers({isSort:!0,isVisibleOnly:isVisibleOnly});for(var i in tempLayers)this.reflectionSubLayers(tempLayers[i],allLayers,isVisibleOnly)}else{var tempBaseLayer=new GeoNURIS.BaseLayer(layer.serverInfo,layer.name,layer.title,layer.projection);tempBaseLayer.id=layer.id;tempBaseLayer.setVisibility=function(isVisible){return layer.setVisibility(isVisible)};tempBaseLayer.getVisibility=function(){return layer.getVisibility()};allLayers.push(tempBaseLayer)}};Service.prototype.initCapability=function(serverInfo){this.capability=null;OpenLayers.Request.GET({url:serverInfo.getURI("wms"),params:{SERVICE:"WMS",VERSION:"1.3.0",REQUEST:"GetCapabilities"},success:function(request){var doc=request.responseXML;doc&&doc.documentElement||(doc=request.responseText);this.capability=(new OpenLayers.Format.WMSCapabilities).read(doc).capability;if("object"==typeof doc.activeElement&&null!=doc.activeElement&&"object"==typeof doc.activeElement.children&&null!=doc.activeElement.children)for(var i=0;i<doc.activeElement.children.length;i++)if(doc.activeElement.children.item(i).tagName.toLowerCase().indexOf("serviceexception")>-1){alert(serverInfo.getGDXName()+" :: "+doc.activeElement.children.item(i).textContent);break}},failure:function(){alert(serverInfo.getURI()+" :: "+"Trouble getting capabilities doc")},scope:this,async:!1})};Service.prototype.getWMSLayerNames=function(){var tempLayers=[];tempLayers=this.serverInfo.isCache?[this.rootLayer.name]:_.map(this.getAllLayers(!0),function(obj){return obj.name});return tempLayers};Service.prototype.redraw=function(){if("undefined"!=typeof this.wmsLayer&&null!=this.wmsLayer&&"object"==typeof this.wmsLayer.params&&null!=this.wmsLayer.params){this.wmsLayer.params.LAYERS=this.getWMSLayerNames();"function"==typeof this.wmsLayer.redraw&&this.wmsLayer.redraw(!0)}};Service.prototype.initLayers=function(layer,projection){var _this=this,tempLayer=null;if(0==layer.nestedLayers.length)tempLayer=new GeoNURIS.Layer(this.serverInfo,layer.name,layer.title,projection);else{var tempLayers=[];for(var i in layer.nestedLayers)tempLayers.push(this.initLayers(layer.nestedLayers[i],projection));tempLayer=new GeoNURIS.GroupLayer(this.serverInfo,layer.name,layer.title,tempLayers,!0)}tempLayer.redraw=function(){return _this.redraw()};return tempLayer};Service.prototype.initService=function(serverInfo){var _this=this,wmsLayerOptions=serverInfo.getWMSLayerOptions(),tempSubLayers=[],rootName="ROOT",rootTitle="ROOT";if(serverInfo.isCapabilitySupport){this.initCapability(serverInfo);if("undefined"!=typeof this.capability&&null!=this.capability){var srs=this.capability.nestedLayers[0].srs;for(var key in srs)if(this.capability.nestedLayers[0].bbox.hasOwnProperty(key)){var bbox=this.capability.nestedLayers[0].bbox[key];"undefined"==typeof wmsLayerOptions.projection&&(wmsLayerOptions.projection=bbox.srs);"undefined"==typeof wmsLayerOptions.maxExtent&&(wmsLayerOptions.maxExtent=bbox.bbox);break}var tempOLayer=this.capability.nestedLayers[0];for(var i in tempOLayer.nestedLayers){var tempLayer=this.initLayers(tempOLayer.nestedLayers[i],wmsLayerOptions.projection);tempSubLayers.push(tempLayer)}rootName=tempOLayer.name;rootTitle=tempOLayer.title}}else{var layerNames=serverInfo.getStaticLayers();for(var key in layerNames){var tempLayer=null,lName=layerNames[key];tempLayer=new GeoNURIS.Layer(this.serverInfo,lName,lName,wmsLayerOptions.projection);tempLayer.redraw=function(){return _this.redraw()};tempSubLayers.push(tempLayer)}}this.rootLayer=new GeoNURIS.GroupLayer(this.serverInfo,rootName,rootTitle,tempSubLayers,!0);this.rootLayer.getVisibility=function(){return _this.getVisibility()};this.rootLayer.setVisibility=function(isVisible){return _this.setVisibility(isVisible)};this.rootLayer.setZIndex=function(){console.log("rootLayer setZIndex is not supported. service setZIndex use.")};this.wmsLayer=new OpenLayers.Layer.WMS(serverInfo.getGDXName(),serverInfo.getURI("wms"),{format:"image/png",transparent:!0,layers:this.getWMSLayerNames()},{buffer:2,transitionEffect:"resize",opacity:1});this.wmsLayer.addOptions(wmsLayerOptions,!1)};Service.prototype.getURI=function(type){return this.serverInfo.getURI(type)};Service.prototype.setZIndex=function(zIndex){this.wmsLayer.setZIndex(zIndex)};Service.prototype.getZIndex=function(){return this.wmsLayer.getZIndex()};Service.prototype.getGDXName=function(isExtension){return this.serverInfo.getGDXName(isExtension)};Service.prototype.getVisibility=function(){return this.wmsLayer.getVisibility()};Service.prototype.setVisibility=function(isVisible){this.wmsLayer.setVisibility(isVisible)};return Service}();GeoNURIS.Service=Service}(GeoNURIS||(GeoNURIS={}));define("Service",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var CustomService=function(_super){function CustomService(serverInfo){_super.call(this,serverInfo)}__extends(CustomService,_super);CustomService.prototype.getServiceLayer=function(){return this.serviceLayer};CustomService.prototype.getAllLayers=function(){return[]};CustomService.prototype.createDaumMap=function(serviceType){var type="",tempURLs=[];"string"==typeof serviceType&&null!=serviceType&&(type=serviceType.toLowerCase());if("satellite"==type||"s"==type){type="SATELLITE";tempURLs=["http://s0.maps.daum-img.net/L${z}/${y}/${x}.jpg?v=131210","http://s1.maps.daum-img.net/L${z}/${y}/${x}.jpg?v=131210","http://s2.maps.daum-img.net/L${z}/${y}/${x}.jpg?v=131210","http://s3.maps.daum-img.net/L${z}/${y}/${x}.jpg?v=131210"]}else if("hybrid"==type||"h"==type){type="HYBRID";tempURLs=["http://h0.maps.daum-img.net/map/image/G03/h/1.04/L${z}/${y}/${x}.png","http://h1.maps.daum-img.net/map/image/G03/h/1.04/L${z}/${y}/${x}.png","http://h2.maps.daum-img.net/map/image/G03/h/1.04/L${z}/${y}/${x}.png","http://h3.maps.daum-img.net/map/image/G03/h/1.04/L${z}/${y}/${x}.png"]}else{type="";tempURLs=["http://i0.maps.daum-img.net/map/image/G03/i/1.04/L${z}/${y}/${x}.png","http://i1.maps.daum-img.net/map/image/G03/i/1.04/L${z}/${y}/${x}.png","http://i2.maps.daum-img.net/map/image/G03/i/1.04/L${z}/${y}/${x}.png","http://i3.maps.daum-img.net/map/image/G03/i/1.04/L${z}/${y}/${x}.png"]}type=""!=type?"."+type:type;var tempClass=OpenLayers.Class(OpenLayers.Layer.XYZ,{name:"DaumMap"+type,url:tempURLs,resolutions:[2048,1024,512,256,128,64,32,16,8,4,2,1,.5,.25],sphericalMercator:!1,transitionEffect:"resize",buffer:1,numZoomLevels:14,minResolution:.5,maxResolution:2048,units:"m",projection:new OpenLayers.Projection("EPSG:5181"),displayOutsideMaxExtent:!0,maxExtent:new OpenLayers.Bounds(-3e4,-6e4,494288,988576),initialize:function(name,options){options?options.resolutions||(options.resolutions=[2048,1024,512,256,128,64,32,16,8,4,2,1,.5,.25]):options={resolutions:[2048,1024,512,256,128,64,32,16,8,4,2,1,.5,.25]};var newArgs=[name,null,options],temp=OpenLayers.Layer.XYZ;temp.prototype.initialize.apply(this,newArgs)},clone:function(obj){null==obj&&(obj=new tempClass(this.name,this.getOptions()));obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);return obj},getXYZ:function(bounds){var res=this.getServerResolution(),x=Math.round((bounds.left-this.maxExtent.left)/(res*this.tileSize.w)),y=Math.round((bounds.bottom-this.maxExtent.bottom)/(res*this.tileSize.h)),z=14-this.getServerZoom();if(this.wrapDateLine){var limit=Math.pow(2,z);x=(x%limit+limit)%limit}return{x:x,y:y,z:z}},CLASS_NAME:"Daum"+type});return new tempClass};CustomService.prototype.createNaverMap=function(serviceType){var type="",tempURLs=[];"string"==typeof serviceType&&null!=serviceType&&(type=serviceType.toLowerCase());if("satellite"==type||"s"==type){type="SATELLITE";tempURLs=["http://onetile1.map.naver.net/get/40/0/1/${z}/${x}/${y}/bl_st_bg","http://onetile2.map.naver.net/get/40/0/1/${z}/${x}/${y}/bl_st_bg","http://onetile3.map.naver.net/get/40/0/1/${z}/${x}/${y}/bl_st_bg","http://onetile4.map.naver.net/get/40/0/1/${z}/${x}/${y}/bl_st_bg"]}else if("hybrid"==type||"h"==type){type="HYBRID";tempURLs=["http://onetile1.map.naver.net/get/40/0/0/${z}/${x}/${y}/empty/ol_st_rd/ol_st_an","http://onetile2.map.naver.net/get/40/0/0/${z}/${x}/${y}/empty/ol_st_rd/ol_st_an","http://onetile3.map.naver.net/get/40/0/0/${z}/${x}/${y}/empty/ol_st_rd/ol_st_an","http://onetile4.map.naver.net/get/40/0/0/${z}/${x}/${y}/empty/ol_st_rd/ol_st_an"]}else{type="";tempURLs=["http://onetile1.map.naver.net/get/40/0/0/${z}/${x}/${y}/bl_vc_bg/ol_vc_an","http://onetile2.map.naver.net/get/40/0/0/${z}/${x}/${y}/bl_vc_bg/ol_vc_an","http://onetile3.map.naver.net/get/40/0/0/${z}/${x}/${y}/bl_vc_bg/ol_vc_an","http://onetile4.map.naver.net/get/40/0/0/${z}/${x}/${y}/bl_vc_bg/ol_vc_an"]}type=""!=type?"."+type:type;var tempClass=OpenLayers.Class(OpenLayers.Layer.XYZ,{name:"NaverMAP"+type,url:tempURLs,resolutions:[2048,1024,512,256,128,64,32,16,8,4,2,1,.5,.25],sphericalMercator:!1,transitionEffect:"resize",buffer:1,numZoomLevels:14,minResolution:.5,maxResolution:2048,units:"m",projection:new OpenLayers.Projection("EPSG:5179"),displayOutsideMaxExtent:!1,maxExtent:new OpenLayers.Bounds(90112,1192896,1990673,2761664),initialize:function(name,options){options?options.resolutions||(options.resolutions=[2048,1024,512,256,128,64,32,16,8,4,2,1,.5,.25]):options={resolutions:[2048,1024,512,256,128,64,32,16,8,4,2,1,.5,.25]};var newArgs=[name,null,options],temp=OpenLayers.Layer.XYZ;temp.prototype.initialize.apply(this,newArgs)},clone:function(obj){null==obj&&(obj=new tempClass(this.name,this.getOptions()));obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);return obj},getXYZ:function(bounds){var res=this.getServerResolution(),x=Math.round((bounds.left-this.maxExtent.left)/(res*this.tileSize.w)),y=Math.round((bounds.bottom-this.maxExtent.bottom)/(res*this.tileSize.h)),z=this.getServerZoom()+1;if(this.wrapDateLine){var limit=Math.pow(2,z);x=(x%limit+limit)%limit}return{x:x,y:y,z:z}},CLASS_NAME:"Naver"+type});return new tempClass};CustomService.prototype.createGoogleMap=function(serviceType,autoVisible){var tempAutoVisible="boolean"==typeof autoVisible?autoVisible:!0;if("string"==typeof serviceType&&null!=serviceType){if("physical"==serviceType||"p"==serviceType)return new OpenLayers.Layer.Google("Google Physical",{type:google.maps.MapTypeId.TERRAIN,visibility:tempAutoVisible});if("hybrid"==serviceType||"h"==serviceType)return new OpenLayers.Layer.Google("Google Hybrid",{type:google.maps.MapTypeId.HYBRID,numZoomLevels:22,visibility:tempAutoVisible});if("satellite"==serviceType||"s"==serviceType)return new OpenLayers.Layer.Google("Google Satellite",{type:google.maps.MapTypeId.SATELLITE,numZoomLevels:22,visibility:tempAutoVisible})}return new OpenLayers.Layer.Google("Google Streets",{numZoomLevels:20,visibility:tempAutoVisible})};CustomService.prototype.createVWorldMap=function(serviceType){var type="",tempURLs=[],vworldUrl="http://map.vworld.kr",vworldBaseMapUrl="http://xdworld.vworld.kr:8080/2d",vworldVers={Base:"201310",Hybrid:"201310",Satellite:"201301"},vworldUrls={base:vworldBaseMapUrl+"/Base/"+vworldVers.Base+"/",hybrid:vworldBaseMapUrl+"/Hybrid/"+vworldVers.Hybrid+"/",raster:vworldBaseMapUrl+"/Satellite/"+vworldVers.Satellite+"/"},vworldUrlsExt={blankimage:vworldUrl+"/images/maps/no_service.gif"},resolutions=[156543.0339,78271.51695,39135.758475,19567.8792375,9783.93961875,4891.969809375,2445.9849046875,1222.99245234375,611.496226171875,305.7481130859375,152.87405654296876,76.43702827148438,38.21851413574219,19.109257067871095,9.554628533935547,4.777314266967774,2.388657133483887,1.1943285667419434,.5971642833709717,.29858214168548586,.14929107084274293],mBounds=new OpenLayers.Bounds(112.5,29.53522956294847,135,45.089),displayProj="EPSG:4326",originalProj="EPSG:900913";"string"==typeof serviceType&&null!=serviceType&&(type=serviceType.toLowerCase());if("satellite"==type||"s"==type){type="SATELLITE";tempURLs=[vworldUrls.raster+"${z}/${x}/${y}.jpeg"]}else if("hybrid"==type||"h"==type){type="HYBRID";tempURLs=[vworldUrls.hybrid+"${z}/${x}/${y}.png"]}else{type="";tempURLs=[vworldUrls.base+"${z}/${x}/${y}.png"]}type=""!=type?"."+type:type;var tempClass=OpenLayers.Class(OpenLayers.Layer.XYZ,{name:"VMAP"+type,url:tempURLs,sphericalMercator:!0,wrapDateLine:!0,transitionEffect:"resize",buffer:0,numZoomLevels:21,units:"m",displayOutsideMaxExtent:!1,tileOrigin:null,resolutions:resolutions,minResolution:.14929107084274293,maxResolution:156543.0339,projection:new OpenLayers.Projection(originalProj),displayProjection:new OpenLayers.Projection(displayProj),serverMaxlevel:18,mapBounds:mBounds.transform(new OpenLayers.Projection(displayProj),new OpenLayers.Projection(originalProj)),tempGetURL:OpenLayers.Layer.XYZ.prototype.getURL,initialize:function(name,options){var newArgs=[name,null,options],temp=OpenLayers.Layer.XYZ;temp.prototype.initialize.apply(this,newArgs)},clone:function(obj){null==obj&&(obj=new tempClass(this.name,this.getOptions()));obj=OpenLayers.Layer.XYZ.prototype.clone.apply(this,[obj]);return obj},getURL:function(bounds){var xyz=this.getXYZ(bounds);return 0==xyz.x&&0==xyz.y&&0==xyz.z?vworldUrlsExt.blankimage:this.tempGetURL(bounds)},getXYZ:function(bounds){var res=this.getServerResolution(),x=Math.round((bounds.left-this.maxExtent.left)/(res*this.tileSize.w)),y=Math.round((this.maxExtent.top-bounds.top)/(res*this.tileSize.h)),z=this.getServerZoom(),limit=Math.pow(2,z);if(0>y||y>=limit)return{x:0,y:0,z:0};x=(x%limit+limit)%limit;if(this.mapBounds.intersectsBounds(bounds)){if(z>=6&&z<=this.serverMaxlevel)return{x:x,y:y,z:z};if(z>this.serverMaxlevel){var n=z-this.serverMaxlevel,z2=z-n,nsize=256*Math.pow(2,n),x=Math.round((bounds.left-this.maxExtent.left)/(res*nsize)),y=Math.round((this.maxExtent.top-bounds.top)/(res*nsize));x=(x%limit+limit)%limit;return{x:x,y:y,z:z2}}return{x:0,y:0,z:0}}return{x:0,y:0,z:0}},CLASS_NAME:"VWorld"+type});return new tempClass};CustomService.prototype.initService=function(serverInfo){var _this=this;this.capability=null;var provider=serverInfo.provider.toLowerCase(),serviceType=serverInfo.serviceType.toLowerCase();this.serviceLayer="google"==provider||"g"==provider?this.createGoogleMap(serviceType,serverInfo.autoVisible):"naver"==provider||"n"==provider?this.createNaverMap(serviceType):"daum"==provider||"d"==provider?this.createDaumMap(serviceType):"vworld"==provider||"v"==provider?this.createVWorldMap(serviceType):new OpenLayers.Layer.OSM;
var title=name=provider+" "+serviceType;this.rootLayer=new GeoNURIS.GroupLayer(this.serverInfo,name,title,[],!0);this.rootLayer.getVisibility=function(){return _this.getVisibility()};this.rootLayer.setVisibility=function(isVisible){return _this.setVisibility(isVisible)};this.rootLayer.setZIndex=function(){console.log("rootLayer setZIndex is not supported. service setZIndex use.")}};CustomService.prototype.getZIndex=function(){return this.serviceLayer.getZIndex()};CustomService.prototype.setZIndex=function(zIndex){this.serviceLayer.setZIndex(zIndex)};CustomService.prototype.getVisibility=function(){return this.serviceLayer.getVisibility()};CustomService.prototype.setVisibility=function(isVisible){this.serviceLayer.setVisibility(isVisible)};return CustomService}(GeoNURIS.Service);GeoNURIS.CustomService=CustomService}(GeoNURIS||(GeoNURIS={}));define("CustomService",function(){});var GeoNURIS;!function(GeoNURIS){var TOC=function(){function TOC(map,serverInfos){this.map=map;this.services=[];"undefined"!=typeof serverInfos&&this.setServerInfos(serverInfos)}TOC.prototype.getServices=function(){return this.services};TOC.prototype.getServiceIDs=function(){return _.pluck(this.services,"id")};TOC.prototype.getService=function(id){return _.findWhere(this.services,{id:id})};TOC.prototype.getServiceGDXNames=function(){return _.map(this.services,function(obj){return obj.getGDXName()})};TOC.prototype.getServiceforGDXName=function(gdxName){return _.filter(this.services,function(obj){return obj.getGDXName()==gdxName})};TOC.prototype.addServerInfo=function(serverInfo){if(!_.contains(_.map(this.services,function(obj){return obj.getURI("wms")}),serverInfo.getURI("wms"))){var service,self=this;if(serverInfo instanceof GeoNURIS.CustomServerInfo){var customServerInfo=serverInfo,provider=customServerInfo.provider.toLowerCase();if("google"!=provider&&"g"!=provider||"undefined"!=typeof google&&"undefined"!=typeof google.maps.MapTypeId){service=new GeoNURIS.CustomService(serverInfo);this.services.push(service);this.map.addService(service)}else UTIL.loadJavascripts(["http://maps.google.com/maps/api/js?v=3&sensor=false","http://maps.gstatic.com/intl/ko_kr/mapfiles/api-3/14/15/main.js"],function(){service=new GeoNURIS.CustomService(serverInfo);self.services.push(service);self.map.addService(service)})}else if(serverInfo instanceof GeoNURIS.ServerInfo){service=new GeoNURIS.Service(serverInfo);this.services.push(service);this.map.addService(service)}}};TOC.prototype.addServerInfos=function(serverInfos){for(var oldServerInfoList=_.map(this.services,function(obj){return obj.getURI("wms")}),newServerInfoList=_.filter(serverInfos,function(obj){return 0==_.contains(oldServerInfoList,obj.getURI("wms"))}),i=0;i<newServerInfoList.length;i++){this.addServerInfo(newServerInfoList[i]);if(newServerInfoList[i]instanceof GeoNURIS.CustomServerInfo){var customServerInfo=newServerInfoList[i],provider=customServerInfo.provider.toLowerCase();if(!("google"!=provider&&"g"!=provider||"undefined"!=typeof google&&"undefined"!=typeof google.maps.MapTypeId)){var self=this,check=setInterval(function(){if("undefined"!=typeof google&&"undefined"!=google.maps&&"undefined"!=google.maps.MapTypeId){clearInterval(check);for(var j=i+1;j<newServerInfoList.length;j++)self.addServerInfo(newServerInfoList[j])}else console.log("wating..")},1e3);break}}}};TOC.prototype.setServerInfos=function(serverInfos){for(;this.services.length>0;)this.map.removeService(this.services.pop());this.addServerInfos(serverInfos)};return TOC}();GeoNURIS.TOC=TOC}(GeoNURIS||(GeoNURIS={}));define("TOC",function(){});define("Style",function(){});var GeoNURIS;!function(GeoNURIS){!function(CONTROL_TYPE){CONTROL_TYPE[CONTROL_TYPE.HANDLER=0]="HANDLER";CONTROL_TYPE[CONTROL_TYPE.EVENT=1]="EVENT";CONTROL_TYPE[CONTROL_TYPE.TOOL=2]="TOOL";CONTROL_TYPE[CONTROL_TYPE.DISPLAY=3]="DISPLAY"}(GeoNURIS.CONTROL_TYPE||(GeoNURIS.CONTROL_TYPE={}));GeoNURIS.CONTROL_TYPE;var BaseControl=function(){function BaseControl(control,map,type,name){this.control=control;this.map=map;this.type=type;this.name=name}BaseControl.prototype.activate=function(){console.log("not defined")};BaseControl.prototype.deactivate=function(){console.log("not defined")};return BaseControl}();GeoNURIS.BaseControl=BaseControl}(GeoNURIS||(GeoNURIS={}));define("BaseControl",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var Mouse=function(_super){function Mouse(control,map){_super.call(this,control,map,[0],"mouse");this.trigger=[];this.CLICK=new Mouse.Click(control,map,this.trigger);this.HOVER=new Mouse.Hover(control,map,this.trigger)}__extends(Mouse,_super);Mouse.prototype.activate=function(){console.log("mouse activate undefined")};Mouse.prototype.deactivate=function(){console.log("mouse deactivate undefined")};return Mouse}(GeoNURIS.BaseControl);GeoNURIS.Mouse=Mouse;!function(Mouse){var Click=function(_super){function Click(control,map,trigger){_super.call(this,control,map,[],"mouse click");this.me=[];this.trigger=trigger}__extends(Click,_super);Click.prototype.convertID=function(id){return"mouse_click_"+UTIL.trim(id.toLowerCase())};Click.prototype.activate=function(id,trigger,delay){console.log("mouse click activate");for(var ti in this.trigger)this.trigger[ti].func({state:"activate",id:id});this.deactivate(id);var tempTarget=_.findWhere(this.me,{id:this.convertID(id)});if("undefined"==typeof tempTarget){tempTarget=new OpenLayers.Control({id:this.convertID(id)});this.me.push(tempTarget)}tempTarget.handler=new OpenLayers.Handler.Click(tempTarget,{click:trigger},{single:!0,pixelTolerance:null});tempTarget.handler.delay="number"==typeof delay?delay:0;null==this.map.getMapforOpenLayers().getControl(this.convertID(id))&&this.map.getMapforOpenLayers().addControl(tempTarget);tempTarget.activate()};Click.prototype.deactivate=function(id){for(var ti in this.trigger)this.trigger[ti].func({state:"deactivate",id:id});if("undefined"!=typeof this.me&&null!=this.me)if("string"==typeof id&&null!=id){var tempTarget=_.findWhere(this.me,{id:this.convertID(id)});if("undefined"!=typeof tempTarget&&null!=tempTarget){if(tempTarget.active){tempTarget.deactivate();tempTarget.destroy()}this.map.getMapforOpenLayers().removeControl(tempTarget);this.me=_.difference(this.me,[tempTarget]);console.log("control removed :: "+tempTarget.CLASS_NAME)}}else if("boolean"==typeof id&&id){for(var i in this.me){this.me[i].deactivate();this.me[i].destroy();this.map.getMapforOpenLayers().removeControl(this.me[i])}this.me=[]}};return Click}(GeoNURIS.BaseControl);Mouse.Click=Click;var Hover=function(_super){function Hover(control,map){_super.call(this,control,map);this.name="mouse hover"}__extends(Hover,_super);Hover.prototype.convertID=function(id){return"mouse_hover_"+id};Hover.prototype.activate=function(id,pause,delay,move){console.log("mouse hover activate");for(var ti in this.trigger)this.trigger[ti].func({state:"activate",id:id});this.deactivate(id);var tempTarget=_.findWhere(this.me,{id:this.convertID(id)});if("undefined"==typeof tempTarget){tempTarget=new OpenLayers.Control({id:this.convertID(id)});this.me.push(tempTarget)}tempTarget.handler=new OpenLayers.Handler.Hover(tempTarget,{pause:pause,move:move},{});tempTarget.handler.delay="number"==typeof delay?delay:200;null==this.map.getMapforOpenLayers().getControl(this.convertID(id))&&this.map.getMapforOpenLayers().addControl(tempTarget);tempTarget.activate()};return Hover}(Click);Mouse.Hover=Hover}(GeoNURIS.Mouse||(GeoNURIS.Mouse={}));var Mouse=GeoNURIS.Mouse}(GeoNURIS||(GeoNURIS={}));define("Mouse",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var Navigation=function(_super){function Navigation(control,map){_super.call(this,control,map,[0],"navigation");this.me=new OpenLayers.Control.Navigation({autoActivate:!1})}__extends(Navigation,_super);Navigation.prototype.activate=function(options){console.log("navigation activate");var tempIsNotBeforeActivate=!1;"undefined"!=typeof options&&null!=options&&"boolean"==typeof options.isNotBeforeActivate&&(tempIsNotBeforeActivate=options.isNotBeforeActivate);if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];target.deactivate();console.log(target.name+" deactivated")}}var tempControl=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null==tempControl||0==tempControl.length){console.log("control added :: "+this.me.CLASS_NAME);this.map.getMapforOpenLayers().addControl(this.me)}this.me.disableZoomBox();this.me.disableZoomWheel();if("undefined"!=typeof options&&null!=options)if(options.all){this.me.enableZoomBox();this.me.enableZoomWheel()}else{options.isZoomBox&&this.me.enableZoomBox();options.isZoomWheel&&this.me.enableZoomWheel()}this.me.activate();this.control.TOOLBAR.setActivateButton("navigation")};Navigation.prototype.deactivate=function(){if("undefined"!=typeof this.me&&null!=this.me){this.me.active&&this.me.deactivate();var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}}};return Navigation}(GeoNURIS.BaseControl);GeoNURIS.Navigation=Navigation}(GeoNURIS||(GeoNURIS={}));define("Navigation",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var ZoomBox=function(_super){function ZoomBox(control,map){_super.call(this,control,map,[0],"zoombox");this.me={};this.me._in=new OpenLayers.Control.ZoomBox({autoActivate:!1});this.me._out=new OpenLayers.Control.ZoomBox({autoActivate:!1,out:!0})}__extends(ZoomBox,_super);ZoomBox.prototype.activate=function(options){console.log("zoomBox activate");var tempIsNotBeforeActivate=!1,tempIsOUT=!1;if("undefined"!=typeof options&&null!=options){if("boolean"==typeof options.isOut)var tempIsOUT=options.isOut;"boolean"==typeof options.isNotBeforeActivate&&(tempIsNotBeforeActivate=options.isNotBeforeActivate)}if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];target.deactivate();console.log(target.name+" deactivated")}}this.deactivate();if(tempIsOUT){this.map.getMapforOpenLayers().addControl(this.me._out);this.me._out.activate()}else{this.map.getMapforOpenLayers().addControl(this.me._in);this.me._in.activate()}this.control.TOOLBAR.setActivateButton(tempIsOUT?"zoomout":"zoomin")};ZoomBox.prototype.deactivate=function(){if("undefined"!=typeof this.me&&null!=this.me){this.me._in.active&&this.me._in.deactivate();this.me._out.active&&this.me._out.deactivate();var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me._in.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me._in.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}}};return ZoomBox}(GeoNURIS.BaseControl);GeoNURIS.ZoomBox=ZoomBox;var ZoomBoxIn=function(_super){function ZoomBoxIn(){_super.apply(this,arguments)}__extends(ZoomBoxIn,_super);ZoomBoxIn.prototype.activate=function(isNotBeforeActivate){_super.prototype.activate.call(this,{isOut:!1,isNotBeforeActivate:isNotBeforeActivate})};return ZoomBoxIn}(ZoomBox);GeoNURIS.ZoomBoxIn=ZoomBoxIn;var ZoomBoxOut=function(_super){function ZoomBoxOut(){_super.apply(this,arguments)}__extends(ZoomBoxOut,_super);ZoomBoxOut.prototype.activate=function(isNotBeforeActivate){_super.prototype.activate.call(this,{isOut:!0,isNotBeforeActivate:isNotBeforeActivate})};return ZoomBoxOut}(ZoomBox);GeoNURIS.ZoomBoxOut=ZoomBoxOut}(GeoNURIS||(GeoNURIS={}));define("ZoomBox",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var NavigationHistory=function(_super){function NavigationHistory(control,map){_super.call(this,control,map,[1],"navigationhistory");this.me=new OpenLayers.Control.NavigationHistory({autoActivate:!0});var tempControl=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null==tempControl||0==tempControl.length){console.log("control added :: "+this.me.CLASS_NAME);this.map.getMapforOpenLayers().addControl(this.me)}}__extends(NavigationHistory,_super);NavigationHistory.prototype.activate=function(isNext){console.log("navigationhistory activate");isNext?this.me.next.trigger():this.me.previous.trigger()};NavigationHistory.prototype.deactivate=function(){console.log("not supported")};return NavigationHistory}(GeoNURIS.BaseControl);GeoNURIS.NavigationHistory=NavigationHistory}(GeoNURIS||(GeoNURIS={}));define("NavigationHistory",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var MousePosition=function(_super){function MousePosition(control,map){_super.call(this,control,map,[2,3],"mouseposition");this.me=new OpenLayers.Control.MousePosition({autoActivate:!1})}__extends(MousePosition,_super);MousePosition.prototype.activate=function(){console.log("mouseposition activate");var tempControl=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null==tempControl||0==tempControl.length){console.log("control added :: "+this.me.CLASS_NAME);this.me.destroy();this.me=new OpenLayers.Control.MousePosition({autoActivate:!0});this.map.getMapforOpenLayers().addControl(this.me)}this.me.activate()};MousePosition.prototype.deactivate=function(){if("undefined"!=typeof this.me&&null!=this.me){this.me.active&&this.me.deactivate();var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}}};return MousePosition}(GeoNURIS.BaseControl);GeoNURIS.MousePosition=MousePosition}(GeoNURIS||(GeoNURIS={}));define("MousePosition",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var ScaleLine=function(_super){function ScaleLine(control,map){_super.call(this,control,map,[2,3],"scaleline");this.me=new OpenLayers.Control.ScaleLine({autoActivate:!1})}__extends(ScaleLine,_super);ScaleLine.prototype.activate=function(){console.log("scaleline activate");var tempControl=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null==tempControl||0==tempControl.length){console.log("control added :: "+this.me.CLASS_NAME);this.me=new OpenLayers.Control.ScaleLine({autoActivate:!0});this.map.getMapforOpenLayers().addControl(this.me)}this.me.activate()};ScaleLine.prototype.deactivate=function(){if("undefined"!=typeof this.me&&null!=this.me){this.me.active&&this.me.deactivate();var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}}};return ScaleLine}(GeoNURIS.BaseControl);GeoNURIS.ScaleLine=ScaleLine}(GeoNURIS||(GeoNURIS={}));define("ScaleLine",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var PanZoomBar=function(_super){function PanZoomBar(control,map){_super.call(this,control,map,[2,3],"panzoombar");this.me=new OpenLayers.Control.PanZoomBar}__extends(PanZoomBar,_super);PanZoomBar.prototype.activate=function(options){console.log("panzoombar activate");var tempCustom=null,tempNoSkin=!1;if("undefined"!=typeof options&&null!=options){var opts=options;"undefined"!=typeof opts.custom&&null!=opts.custom&&(tempCustom=opts.custom);"boolean"==typeof opts.noSkin&&opts.noSkin&&(tempNoSkin=opts.noSkin)}this.deactivate();var tempControl=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null==tempControl||0==tempControl.length){console.log("control added :: "+this.me.CLASS_NAME);this.me=new OpenLayers.Control.PanZoomBar({zoomWorldIcon:!0});tempCustom instanceof OpenLayers.Control.PanZoomBar&&(this.me=tempCustom);this.map.getMapforOpenLayers().addControl(this.me);var buttons=["pandown","panup","panleft","panright","zoomworld","zoomin","zoomout"];if(null==tempCustom&&!tempNoSkin)for(var key in buttons){var targetStr=buttons[key],targetImgSrc=buttons[key]+".png",div=_.chain(this.me.buttons).find(function(obj){return obj.id.toLowerCase().indexOf(targetStr)>=0?!0:!1}).value(),img=div.children[0];div.style.width="23px";div.style.height="20px";img.src=OpenLayers.Util.getImageLocation(targetImgSrc);img.style.width="23px";img.style.height="20px";"zoomin"==targetStr?div.style.top=parseInt(div.style.top.replace("px",""))-2+"px":"panleft"==targetStr?img.style.right="4px":"panright"==targetStr?img.style.left="4px":"pandown"==targetStr?img.style.top="4px":"panup"==targetStr&&(img.style.bottom="4px")}var zoombarDiv=this.me.zoombarDiv;zoombarDiv.style.backgroundImage="url("+OpenLayers.Util.getImageLocation("zbar.png")+")";zoombarDiv.style.width="23px";var sliderDiv=this.me.slider;sliderDiv.style.marginLeft="4px";var sliderImg=sliderDiv.children[0];sliderImg.src=OpenLayers.Util.getImageLocation("zb_btn.png");sliderImg.style.width="22px";sliderImg.style.height="11px";this.me.div.style.backgroundImage="url("+OpenLayers.Util.getImageLocation("bg.png")+")";this.me.div.style.backgroundRepeat="no-repeat no-repeat";this.me.div.style.backgroundPosition="7px 5px";this.me.div.style.width="81px";this.me.div.style.height="305px";this.me.div.style.removeProperty("left");this.me.div.style.right="0px";this.me.div.style.top="50px"}this.me.activate()};PanZoomBar.prototype.deactivate=function(){if("undefined"!=typeof this.me&&null!=this.me){this.me.active&&this.me.deactivate();var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}}};return PanZoomBar}(GeoNURIS.BaseControl);GeoNURIS.PanZoomBar=PanZoomBar}(GeoNURIS||(GeoNURIS={}));define("PanZoomBar",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var NavToolbar=function(_super){function NavToolbar(control,map){_super.call(this,control,map,[2,3,0],"navtoolbar");this.me=new OpenLayers.Control.NavToolbar}__extends(NavToolbar,_super);NavToolbar.prototype.activate=function(isNotBeforeActivate){console.log("navtoolbar activate");var tempIsNotBeforeActivate=!1;"boolean"==typeof isNotBeforeActivate&&(tempIsNotBeforeActivate=isNotBeforeActivate);if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];target.deactivate();console.log(target.name+" deactivated")}}var tempControl=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null==tempControl||0==tempControl.length){console.log("control added :: "+this.me.CLASS_NAME);this.me=new OpenLayers.Control.NavToolbar({autoActivate:!0});this.map.getMapforOpenLayers().addControl(this.me)}this.me.activate()};NavToolbar.prototype.deactivate=function(){if("undefined"!=typeof this.me&&null!=this.me){this.me.active&&this.me.deactivate();var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}}};return NavToolbar}(GeoNURIS.BaseControl);GeoNURIS.NavToolbar=NavToolbar}(GeoNURIS||(GeoNURIS={}));define("NavToolbar",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var Measure=function(_super){function Measure(control,map){_super.call(this,control,map,[0,3],"measure");this.isMove=!1;this.me={};this.defaultStyleRule=null;this.displayPrefix="measure";this.displayMeasurePopups=[];var pointStyle={};pointStyle.pointRadius=4;pointStyle.graphicName="square";pointStyle.fillColor="red";pointStyle.fillOpacity=.5;pointStyle.strokeWidth=1;pointStyle.strokeOpacity=.7;pointStyle.strokeColor="red";var lineStyle={};lineStyle.strokeWidth=3;lineStyle.strokeOpacity=.7;lineStyle.strokeColor="red";var polygonStyle={};polygonStyle.strokeWidth=3;polygonStyle.strokeOpacity=.7;polygonStyle.strokeColor="blue";polygonStyle.fillColor="blue";polygonStyle.fillOpacity=.3;polygonStyle.pointRadius=4;var boxStyle={};boxStyle.strokeWidth=3;boxStyle.strokeOpacity=.7;boxStyle.strokeColor="blue";boxStyle.fillColor="blue";boxStyle.fillOpacity=.3;this.defaultStyleRule=new OpenLayers.Rule({symbolizer:{Point:pointStyle,Line:lineStyle,Polygon:polygonStyle,Box:boxStyle}});var style=new OpenLayers.Style;style.addRules([this.defaultStyleRule]);this.styleMap=new OpenLayers.StyleMap({"default":style});var defaultOptions={persist:!0,handlerOptions:{layerOptions:{styleMap:this.styleMap,renderers:OpenLayers.Layer.Vector.prototype.renderers},sides:4,irregular:!0}},regularOptions={persist:!0,handlerOptions:{layerOptions:{styleMap:this.styleMap,renderers:OpenLayers.Layer.Vector.prototype.renderers},sides:50}};this.me._line=new OpenLayers.Control.Measure(OpenLayers.Handler.Path,defaultOptions);this.me._polygon=new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,defaultOptions);this.me._regular=new OpenLayers.Control.Measure(OpenLayers.Handler.RegularPolygon,regularOptions);this.me._box=new OpenLayers.Control.Measure(OpenLayers.Handler.RegularPolygon,defaultOptions);for(var i in this.me){var target=this.me[i];target.geodesic=!0;target.events.on({measure:function(e){this.measureEnd(e)},measurepartial:function(e){this.measureIng(e)},scope:this})}}__extends(Measure,_super);Measure.prototype.activate=function(options){var _this=this;console.log("measure activate");this.optionMeasureEnd=function(){};this.optionMeasureIng=function(){};var pStyle=this.defaultStyleRule.symbolizer.Point;pStyle.strokeColor="red";pStyle.fillColor="red";var mapName=this.map.getMapforOpenLayers().baseLayer.name.toLowerCase(),tempVisibleResult=!1,targetType=this.me._line,tempIsNotBeforeActivate=!1,tempIsMove=!1,tempGeodesic="daummap"==mapName||"navermap"==mapName?!1:!0,tempPersist=!0,tempStyleRule=null;if("undefined"!=typeof options&&null!=options){"boolean"==typeof options.isNotBeforeActivate&&(tempIsNotBeforeActivate=options.isNotBeforeActivate);"boolean"==typeof options.isMove&&(tempIsMove=options.isMove);"boolean"==typeof options.geodesic&&(tempGeodesic=options.geodesic);"boolean"==typeof options.visibleResult&&(tempVisibleResult=options.visibleResult);"boolean"==typeof options.persist&&(tempPersist=options.persist);if("string"==typeof options.type){var tempType=UTIL.trim(options.type.toLowerCase());"line"==tempType||"l"==tempType?targetType=this.me._line:"polygon"==tempType||"p"==tempType?targetType=this.me._polygon:"regular"==tempType||"r"==tempType?targetType=this.me._regular:("box"==tempType||"b"==tempType)&&(targetType=this.me._box);if("line"!=tempType&&"l"!=tempType){pStyle.strokeColor="blue";pStyle.fillColor="blue"}}"function"==typeof options.fncEnd&&(this.optionMeasureEnd=function(evt){options.fncEnd(evt)});"function"==typeof options.fncIng&&(this.optionMeasureIng=function(evt){options.fncIng(evt)});if("undefined"!=typeof options.styleRule&&null!=options.styleRule){var styleRule=options.styleRule,symbolizer={};"undefined"!=typeof styleRule.box&&null!=styleRule.box&&(symbolizer.Box=styleRule.box);"undefined"!=typeof styleRule.point&&null!=styleRule.point&&(symbolizer.Point=styleRule.point);"undefined"!=typeof styleRule.polygon&&null!=styleRule.polygon&&(symbolizer.Polygon=styleRule.polygon);"undefined"!=typeof styleRule.line&&null!=styleRule.line&&(symbolizer.Line=styleRule.line);tempStyleRule=new OpenLayers.Rule({symbolizer:symbolizer})}}this.measureEnd=function(evt){console.log("measureEnd : "+evt.measure+" "+evt.units);_this.optionMeasureEnd(evt);if(tempVisibleResult){var g=evt.geometry.components[evt.geometry.components.length-1];evt.geometry.componentTypes[0].toLowerCase().lastIndexOf("linearring")>=0&&(g=g.components[g.components.length-2]);var strongColor="#1833e5",append="<sup>2</sup>",style=null,defaultSymbolizer=_this.defaultStyleRule.clone().symbolizer;if(targetType.id==_this.me._line.id){style=defaultSymbolizer.Line;append="";strongColor="#f11413"}else style=targetType.id==_this.me._box.id?defaultSymbolizer.Box:defaultSymbolizer.Polygon;var lonlat=new OpenLayers.LonLat(g.x,g.y),size=new OpenLayers.Size(120,22),content="<div style='position:absolute; white-space:nowrap; margin:0px; font-size:11px; border:1px solid #585c6c; padding:0 5px; line-height:21px; letter-spacing:0px; box-shadow:0 0 1px rgba(0,0,0,0.5); background:#fff'><strong style='color:"+strongColor+";'>"+evt.measure.toFixed(1)+"</strong> "+evt.units+append+"</div>",isClose=!0,closeCallback=function(){console.log("close");if(null!=_this.displayMeasurePopups)for(var i in _this.displayMeasurePopups)_this.map.getMapforOpenLayers().removePopup(_this.displayMeasurePopups[i]);var drawLayer=_this.control.DRAWFEATURE.getDrawLayer();_this.control.DRAWFEATURE.removeFeature(drawLayer.getFeaturesByAttribute(_this.displayPrefix,!0))},popup=new OpenLayers.Popup(_.uniqueId("measure"),lonlat,size,content,isClose,closeCallback);popup.setBackgroundColor("transparent");popup.contentDiv.style.left="15px";popup.closeDiv.style.right="";_this.displayMeasurePopups.push(popup);_this.map.getMapforOpenLayers().addPopup(popup,!1);var attributes={};attributes[_this.displayPrefix]=!0;_this.control.DRAWFEATURE.drawFeature(evt.geometry,null,style,attributes);_this.deactivate()}};this.measureIng=function(evt){console.log("measureIng : "+evt.measure+" "+evt.units);_this.optionMeasureIng(evt);if(tempVisibleResult){var g=evt.geometry.components[evt.geometry.components.length-1];if(evt.geometry.componentTypes[0].toLowerCase().lastIndexOf("point")>=0&&evt.geometry.components.length>2){var lonlat=new OpenLayers.LonLat(g.x,g.y),size=new OpenLayers.Size(120,18),content="<div style='position:absolute; white-space:nowrap; margin:0px; font-size:11px; border:1px solid #585c6c; padding:0 5px; line-height:21px; letter-spacing:0px; box-shadow:0 0 1px rgba(0,0,0,0.5); background:#fff'><strong style='color:#f11413;'>"+evt.measure.toFixed(1)+"</strong> "+evt.units+"</div>",isClose=!1,closeCallback=function(){},popup=new OpenLayers.Popup(_.uniqueId("measure"),lonlat,size,content,isClose,closeCallback);popup.setBackgroundColor("transparent");_this.displayMeasurePopups.push(popup);_this.map.getMapforOpenLayers().addPopup(popup,!1)}}};if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];target.deactivate();console.log(target.name+" deactivated")}}this.deactivate();if(!tempIsMove||targetType.id!=this.me._line.id&&targetType.id!=this.me._polygon.id)this.isMove=!1;else{this.control.NAVIGATION.activate({isNotBeforeActivate:!0,isZoomWheel:!0});this.isMove=!0}for(var i in this.me){var targetItem=this.me[i];targetItem.handler.persist=tempPersist;targetItem.geodesic=tempGeodesic;targetItem.handlerOptions.layerOptions.styleMap.styles.default.rules=null!=tempStyleRule?[tempStyleRule]:[this.defaultStyleRule]}if(null!=this.displayMeasurePopups)for(var i in this.displayMeasurePopups)this.map.getMapforOpenLayers().removePopup(this.displayMeasurePopups[i]);var drawLayer=this.control.DRAWFEATURE.getDrawLayer();this.control.DRAWFEATURE.removeFeature(drawLayer.getFeaturesByAttribute(this.displayPrefix,!0));this.map.getMapforOpenLayers().addControl(targetType);targetType.activate();this.control.TOOLBAR.setActivateButton(targetType.handler.id.replace(/OpenLayers_Handler_/gi,"").replace(/_[0-9]+$/gi,"").toLowerCase())};Measure.prototype.deactivate=function(){if("undefined"!=typeof this.me&&null!=this.me){for(var i in this.me){var target=this.me[i];target.active&&target.deactivate()}var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me._line.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me._line.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}if(this.isMove){this.control.NAVIGATION.deactivate();this.isMove=!1}}};Measure.prototype.measureEnd=function(){};Measure.prototype.measureIng=function(){};Measure.prototype.optionMeasureEnd=function(){};Measure.prototype.optionMeasureIng=function(){};return Measure}(GeoNURIS.BaseControl);GeoNURIS.Measure=Measure}(GeoNURIS||(GeoNURIS={}));define("Measure",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var GetFeature=function(_super){function GetFeature(control,map){_super.call(this,control,map,[0,3,1],"getfeature");this.isHighLight=!1;this.clickTolerance=18;this.me=new OpenLayers.Control.GetFeature({clickTolerance:this.clickTolerance,toggle:!1,multiple:!1,hover:!1,toggleKey:"ctrlKey",multipleKey:"shiftKey"});this.me.events.on({featureunselected:function(e){this.featureUnselected(e)},featuresselected:function(e){this.featuresSelected(e)},scope:this});this.highLightLayer=new OpenLayers.Layer.Vector("highLightLayer",{displayInLayerSwitcher:!1,isBaseLayer:!1})}__extends(GetFeature,_super);GetFeature.prototype.activate=function(layer,options){console.log("getfeature activate");var tempGeom=null,tempFids=null,tempAddFilter=null,tempSelectType="click",tempMaxFeatures=null,tempClickTolerance=this.clickTolerance;this.isHighLight=!1;this.runFeaturesSelected=function(){};this.runFeatureUnselected=function(){};var tempIsNotBeforeActivate=!1;if("undefined"!=typeof options&&null!=options){"boolean"==typeof options.isNotBeforeActivate&&(tempIsNotBeforeActivate=options.isNotBeforeActivate);"string"==typeof options.selectType&&(tempSelectType=UTIL.trim(options.selectType.toLowerCase()));if("boolean"==typeof options.highLight){this.isHighLight=options.highLight;if(this.isHighLight&&null==this.map.getMapforOpenLayers().getLayer(this.highLightLayer.id)){this.map.getMapforOpenLayers().addLayer(this.highLightLayer);this.highLightLayer.setZIndex(3e3)}}if("string"==typeof options.addFilter){tempAddFilter=options.addFilter;""==tempAddFilter&&(tempAddFilter=null)}if("object"==typeof options.fids){tempFids=options.fids;null!=tempFids&&0==tempFids.length&&(tempFids=null)}"object"==typeof options.geom&&(tempGeom=options.geom);"function"==typeof options.fsSelected&&(this.runFeaturesSelected=function(e){options.fsSelected(e)});"function"==typeof options.fUnselected&&(this.runFeatureUnselected=function(e){options.fUnselected(e)
});"number"==typeof options.max&&(tempMaxFeatures=options.max);"number"==typeof options.clickTolerance&&(tempClickTolerance=options.clickTolerance)}if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];if(target instanceof GetFeature&&this.map.getMapforOpenLayers().getControl(target.me.id))console.log("pass");else{target.deactivate();console.log(target.name+" deactivated")}}}if("undefined"!=typeof layer&&0==layer instanceof GeoNURIS.GroupLayer){var wfsProtocol=layer.getWFSProtocol();this.me.protocol=wfsProtocol;var tempControl=this.map.getMapforOpenLayers().getControl(this.me.id);if(null==tempControl){console.log("control added :: "+this.me.CLASS_NAME);this.map.getMapforOpenLayers().addControl(this.me)}this.me.activate();this.me.clickTolerance=tempClickTolerance;if("click"!=tempSelectType||null!=tempFids||null!=tempGeom){var mine=this;this.me.protocol=null;this.me.handlers.hasOwnProperty("click")&&this.me.handlers.click.deactivate();this.me.modifiers={multiple:!1,toggle:!1};if("method"==tempSelectType||"m"==tempSelectType||null!=tempFids||null!=tempGeom){var filter=null;if(null!=tempGeom){var geomIntersectFilter=[];geomIntersectFilter.push(new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.INTERSECTS,value:tempGeom,property:"SHAPE"}));filter=geomIntersectFilter[0];if(null!=tempAddFilter){geomIntersectFilter.push((new OpenLayers.Format.CQL).read(tempAddFilter));filter=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:geomIntersectFilter})}}else null!=tempFids?filter=new OpenLayers.Filter.FeatureId({fids:tempFids}):null!=tempAddFilter&&(filter=(new OpenLayers.Format.CQL).read(tempAddFilter));wfsProtocol.read({filter:filter,maxFeatures:tempMaxFeatures,callback:function(response){null!=response.features&&mine.me.select(response.features);mine.deactivate()}})}else this.control.MEASURE.activate({type:tempSelectType,isNotBeforeActivate:!0,persist:!1,fncEnd:function(evt){var defaultFilter=new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.INTERSECTS,value:evt.geometry,property:"SHAPE"}),filter=defaultFilter;null!=tempAddFilter&&(filter=new OpenLayers.Filter.Logical({type:OpenLayers.Filter.Logical.AND,filters:[filter,(new OpenLayers.Format.CQL).read(tempAddFilter)]}));wfsProtocol.read({filter:filter,maxFeatures:tempMaxFeatures,callback:function(response){null!=response.features&&mine.me.select(response.features)}})}})}else"click"==tempSelectType&&this.me.handlers.hasOwnProperty("click")&&this.me.handlers.click.activate();console.log("ok")}};GetFeature.prototype.clearHighLight=function(){"undefined"!=typeof this.highLightLayer&&"undefined"!=typeof this.me&&this.me.unselectAll()};GetFeature.prototype.deactivate=function(isHighLightRemove){if("undefined"!=typeof this.me&&null!=this.me){if(isHighLightRemove){this.me.unselectAll();this.highLightLayer.removeAllFeatures();null!=this.map.getMapforOpenLayers().getLayer(this.highLightLayer.id)&&this.map.getMapforOpenLayers().removeLayer(this.highLightLayer)}if(this.me.active){this.me.deactivate();this.control.MEASURE.deactivate()}var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}}};GetFeature.prototype.featureUnselected=function(e){this.isHighLight&&this.highLightLayer.removeFeatures(e.feature);this.runFeatureUnselected(e)};GetFeature.prototype.runFeatureUnselected=function(){};GetFeature.prototype.featuresSelected=function(e){this.isHighLight&&this.highLightLayer.addFeatures(e.features);this.runFeaturesSelected(e)};GetFeature.prototype.runFeaturesSelected=function(){};return GetFeature}(GeoNURIS.BaseControl);GeoNURIS.GetFeature=GetFeature}(GeoNURIS||(GeoNURIS={}));define("GetFeature",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var DrawFeature=function(_super){function DrawFeature(control,map){var _this=this;_super.call(this,control,map,[0],"draw feature");this.me={};this.drawLayer=new OpenLayers.Layer.Vector("draw layer",{renderers:OpenLayers.Layer.Vector.prototype.renderers});this.drawLayer.events.on({featureadded:function(obj){_this.featureadded(obj)},featuremodified:function(obj){_this.featuremodified(obj)},vertexmodified:function(obj){_this.vertexmodified(obj)}});if(null==this.map.getMapforOpenLayers().getLayer(this.drawLayer.id)){this.map.getMapforOpenLayers().addLayer(this.drawLayer);this.drawLayer.setZIndex(4900)}this.me._point=new OpenLayers.Control.DrawFeature(this.drawLayer,OpenLayers.Handler.Point);this.me._line=new OpenLayers.Control.DrawFeature(this.drawLayer,OpenLayers.Handler.Path);this.me._box=new OpenLayers.Control.DrawFeature(this.drawLayer,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:4}});this.me._polygon=new OpenLayers.Control.DrawFeature(this.drawLayer,OpenLayers.Handler.Polygon);this.me._regular=new OpenLayers.Control.DrawFeature(this.drawLayer,OpenLayers.Handler.RegularPolygon,{handlerOptions:{sides:50}});this.me._modify=new OpenLayers.Control.ModifyFeature(this.drawLayer)}__extends(DrawFeature,_super);DrawFeature.prototype.featureadded=function(){};DrawFeature.prototype.featuremodified=function(){};DrawFeature.prototype.vertexmodified=function(){};DrawFeature.prototype.getDrawLayer=function(){return this.drawLayer};DrawFeature.prototype.activate=function(mode,type,callback,options){console.log("draw feature activate");var tempMode="add",tempType="line",tempCallBack=null,tempVertexModified=null;"string"==typeof type&&null!=type&&(tempType=UTIL.trim(type.toLowerCase()));if("string"==typeof mode&&null!=mode){tempMode=UTIL.trim(mode.toLowerCase());("modify"==tempMode||"m"==tempMode)&&"vertices"!=tempType&&"v"!=tempType&&"transform"!=tempType&&"t"!=tempType&&(tempType="vertices")}"function"==typeof callback&&null!=callback&&(tempCallBack=callback);var tempStyle=null,tempIsMove=!1,tempLayerID=null,tempIsNotBeforeActivate=!1;if("undefined"!=typeof options&&null!=options){var opts=options;"boolean"==typeof opts.isNotBeforeActivate&&(tempIsNotBeforeActivate=opts.isNotBeforeActivate);"string"==typeof opts.layerid&&null!=opts.layerid&&(tempLayerID=opts.layerid);"function"==typeof opts.vertexmodified&&null!=opts.vertexmodified&&(tempVertexModified=opts.vertexmodified);"boolean"==typeof opts.isMove&&(tempIsMove=opts.isMove);"undefined"!=typeof opts.style&&null!=opts.style&&(tempStyle=opts.style)}if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];target.deactivate();console.log(target.name+" deactivated")}}this.featureadded=function(){};this.featuremodified=function(){};this.vertexmodified=function(){};if("add"==tempMode||"a"==tempMode){var targetType=null;"point"==tempType?targetType=this.me._point:"line"==tempType||"l"==tempType?targetType=this.me._line:"box"==tempType||"b"==tempType?targetType=this.me._box:"polygon"==tempType||"p"==tempType?targetType=this.me._polygon:("regular"==tempType||"r"==tempType)&&(targetType=this.me._regular);if(null!=targetType){tempIsMove&&this.control.NAVIGATION.activate({all:!0,isNotBeforeActivate:!0});null!=tempCallBack&&(this.featureadded=function(obj){tempCallBack(obj)});this.map.getMapforOpenLayers().addControl(targetType);targetType.handler.irregular=!0;targetType.activate();this.drawLayer.style=null!=tempStyle?tempStyle:null}}else if("modify"==tempMode||"m"==tempMode){if("vertices"==tempType||"v"==tempType){this.me._modify.mode=OpenLayers.Control.ModifyFeature.RESHAPE;this.me._modify.createVertices=!0}else if("transform"==tempType||"t"==tempType){this.me._modify.createVertices=!1;this.me._modify.mode=OpenLayers.Control.ModifyFeature.RESIZE;this.me._modify.mode|=OpenLayers.Control.ModifyFeature.ROTATE;this.me._modify.mode|=OpenLayers.Control.ModifyFeature.DRAG}tempIsMove&&this.control.NAVIGATION.activate({all:!0,isNotBeforeActivate:!0});null!=tempCallBack&&(this.featuremodified=function(obj){tempCallBack(obj)});null!=tempVertexModified&&(this.vertexmodified=function(obj){tempVertexModified(obj)});this.map.getMapforOpenLayers().addControl(this.me._modify);this.me._modify.activate()}};DrawFeature.prototype.deactivate=function(){for(var i in this.me){var target=this.me[i];if(target.active){target.deactivate();this.control.NAVIGATION.deactivate()}}var tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me._line.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me._line.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}tempControls=this.map.getMapforOpenLayers().getControlsByClass(this.me._modify.CLASS_NAME);if(null!=tempControls||tempControls.length>0){console.log("control removed :: "+this.me._modify.CLASS_NAME);for(var i in tempControls)this.map.getMapforOpenLayers().removeControl(tempControls[i])}};DrawFeature.prototype.drawFeature=function(data,callback,style,attributes){var features=null;if("object"==typeof data&&null!=data&&data instanceof OpenLayers.Geometry)features=new OpenLayers.Feature.Vector(data,attributes);else if("object"==typeof data&&null!=data){var geojson=new OpenLayers.Format.GeoJSON({});features=geojson.read(data)}if(null!=features){this.drawLayer.style="undefined"!=typeof style&&null!=style?style:null;this.drawLayer.addFeatures(features);"function"==typeof callback&&null!=callback&&callback(features)}};DrawFeature.prototype.getGeoJson=function(){var geojson=new OpenLayers.Format.GeoJSON({}),str=geojson.write(this.drawLayer.features,!0);return str};DrawFeature.prototype.convertFeatureToGeojson=function(feature){var result="";if("undefined"!=typeof feature&&null!=feature){var geojson=new OpenLayers.Format.GeoJSON({});result=geojson.write(feature,!0)}return result};DrawFeature.prototype.getFeatureIDs=function(){return _.pluck(this.drawLayer.features,"id")};DrawFeature.prototype.getFeature=function(id){return"string"==typeof id&&null!=id?this.drawLayer.getFeatureById(id):null};DrawFeature.prototype.getFeatures=function(options){if("object"==typeof options&&null!=options){var resultFeatures=this.drawLayer.features,opt=options;if("object"==typeof opt.attribute&&null!=opt.attribute){var attr=opt.attribute;"string"==typeof attr.name&&null!=attr.name&&"undefined"!=typeof attr.value&&null!=attr.value&&(resultFeatures=this.drawLayer.getFeaturesByAttribute(attr.name,attr.value))}return resultFeatures}return this.drawLayer.features};DrawFeature.prototype.removeAllFeature=function(){this.drawLayer.removeAllFeatures()};DrawFeature.prototype.removeFeature=function(feature){"string"==typeof feature?this.drawLayer.removeFeatures([this.getFeature(feature)]):"object"==typeof feature&&null!=feature&&(Array.isArray(feature)?this.drawLayer.removeFeatures(feature):feature instanceof OpenLayers.Feature.Vector&&this.drawLayer.removeFeatures([feature]))};return DrawFeature}(GeoNURIS.BaseControl);GeoNURIS.DrawFeature=DrawFeature}(GeoNURIS||(GeoNURIS={}));define("DrawFeature",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var SelectFeature=function(_super){function SelectFeature(control,map){_super.call(this,control,map,[0],"select feature");this.defaultId="default";this.me=[]}__extends(SelectFeature,_super);SelectFeature.prototype.convertID=function(id){return"select_feature_"+UTIL.trim(id.toLowerCase())};SelectFeature.prototype.activate=function(callback,options,layer,id){console.log("select feature activate");var tempCallBack=function(feature){console.log(feature)},tempLayer=this.control.DRAWFEATURE.getDrawLayer(),tempID=this.defaultId;"undefined"!=typeof layer&&null!=layer&&(tempLayer=layer);"string"==typeof id&&(tempID=id);"function"==typeof callback&&null!=callback&&(tempCallBack=function(feature){callback(feature)});var tempBox=!1,tempRemove=!1,tempIsNotBeforeActivate=!1;if("undefined"!=typeof options&&null!=options){var opts=options;"boolean"==typeof opts.isNotBeforeActivate&&(tempIsNotBeforeActivate=opts.isNotBeforeActivate);"boolean"==typeof opts.box&&(tempBox=opts.box);"boolean"==typeof opts.remove&&(tempRemove=opts.remove)}if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];target.deactivate();console.log(target.name+" deactivated")}}var tempTarget=_.findWhere(this.me,{id:this.convertID(tempID)});if("undefined"==typeof tempTarget){tempTarget=new OpenLayers.Control.SelectFeature(tempLayer,{id:this.convertID(tempID),onSelect:tempCallBack,clickout:!0,toggle:!1,multiple:!1,hover:!1,toggleKey:"ctrlKey",multipleKey:"shiftKey",box:tempBox,scope:tempTarget});tempTarget.events.on({boxselectionend:function(obj){if(tempRemove&&"undefined"!=typeof obj&&null!=obj&&"undefined"!=typeof obj.layers&&null!=obj.layers){var layers=obj.layers;if(Array.isArray(layers))for(var i in layers){var layer=layers[i];if("undefined"!=typeof layer.selectedFeatures&&null!=layer.selectedFeatures){var selectedFeatures=layer.selectedFeatures;layer.removeFeatures(selectedFeatures)}}}}});this.me.push(tempTarget)}else{tempTarget.onSelect=function(feature){tempCallBack(feature)};tempTarget.box=tempBox;tempTarget.deactivate();tempTarget.activate()}null==this.map.getMapforOpenLayers().getControl(this.convertID(tempID))&&this.map.getMapforOpenLayers().addControl(tempTarget);this.control.NAVIGATION.activate({all:!0,isNotBeforeActivate:!0});tempTarget.activate()};SelectFeature.prototype.deactivate=function(id){if("undefined"!=typeof this.me&&null!=this.me)if("string"==typeof id&&null!=id){var tempTarget=_.findWhere(this.me,{id:this.convertID(id)});if("undefined"!=typeof tempTarget&&null!=tempTarget){if(tempTarget.active){this.control.NAVIGATION.deactivate();tempTarget.deactivate()}this.map.getMapforOpenLayers().removeControl(tempTarget);this.me=_.difference(this.me,[tempTarget]);console.log("control removed :: "+tempTarget.CLASS_NAME)}}else{var isNotActive=!0;for(var i in this.me){this.me[i].deactivate();this.map.getMapforOpenLayers().removeControl(this.me[i]);if(isNotActive){isNotActive=!1;this.control.NAVIGATION.deactivate()}}this.me=[]}};return SelectFeature}(GeoNURIS.BaseControl);GeoNURIS.SelectFeature=SelectFeature}(GeoNURIS||(GeoNURIS={}));define("SelectFeature",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var WMSGetFeatureInfo=function(_super){function WMSGetFeatureInfo(control,map){_super.call(this,control,map,[0],"wmsgetfeatureinfo");this.class_name=OpenLayers.Control.WMSGetFeatureInfo.prototype.CLASS_NAME;this.defaultId="default";this.toc=null;map instanceof GeoNURIS.Map&&(this.toc=map.toc);this.me=[]}__extends(WMSGetFeatureInfo,_super);WMSGetFeatureInfo.prototype.convertID=function(id){return"wmsget_feature_info_"+UTIL.trim(id.toLowerCase())};WMSGetFeatureInfo.prototype.activate=function(services,options,id){console.log("wmsgetfeatureinfo activate");var tempLayers=[],tempID=this.defaultId;if("undefined"!=typeof services&&null!=services&&Array.isArray(services))for(var i in services){var temp=services[i];if(temp instanceof GeoNURIS.Service){var wmsLayer=temp.getServiceLayer();wmsLayer=wmsLayer.clone();wmsLayer.params.LAYERS=_.pluck(temp.getAllLayers(),"name");tempLayers.push(wmsLayer)}}"string"==typeof id&&(tempID=id);var tempMaxFeatures=50,tempCallBack=null,tempAutoActivate=!0,tempIsNotBeforeActivate=!1;if("undefined"!=typeof options&&null!=options){var opts=options;"boolean"==typeof opts.autoActivate&&(tempAutoActivate=opts.autoActivate);"boolean"==typeof opts.isNotBeforeActivate&&(tempIsNotBeforeActivate=opts.isNotBeforeActivate);"function"==typeof opts.callBack&&(tempCallBack=opts.callBack);"number"==typeof opts.max&&(tempMaxFeatures=opts.max);"undefined"!=typeof opts.layers&&null!=opts.layers&&Array.isArray(opts.layers)&&(tempLayers=opts.layers)}if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];target.deactivate();console.log(target.name+" deactivated")}}var tempTarget=_.findWhere(this.me,{id:this.convertID(tempID)});null!=tempTarget&&this.deactivate(tempID);var tempToc=this.toc;tempTarget=new OpenLayers.Control.WMSGetFeatureInfo({id:this.convertID(tempID),layers:tempLayers,maxFeatures:tempMaxFeatures,eventListeners:{getfeatureinfo:function(event){if("function"==typeof tempCallBack&&null!=tempCallBack){var result=[],resultObj={};if(null!=event&&event.hasOwnProperty("features")){var features=event.features;for(var i in features){var item=features[i],url=null;if(item.hasOwnProperty("url")){url=item.url;var service=null,svcs=_.filter(tempToc.getServices(),function(obj){return obj.getURI("wms")==url});null!=svcs&&svcs.length>0&&(service=svcs[0]);if(null!=service){var fs=null;if(item.hasOwnProperty("features")){fs=item.features;for(var j in fs){var feature=fs[j];if(feature.hasOwnProperty("gml")){var gml=feature.gml;if(gml.hasOwnProperty("featureType")){var l=service.getLayerforName(gml.featureType);if(null!=l&&l.length>0){feature.layer=l[0];feature.service=service;result.push(feature)}}}}resultObj[service.getURI("wms")]=fs}}}}}tempCallBack({features:result,object:resultObj})}}},autoActivate:!1,output:"object",infoFormat:"text/xml",drillDown:!0,handlerOptions:{click:{pixelTolerance:null}},vendorParams:{radius:5},formatOptions:{"read_wfs:FeatureCollection":function(root){var data=root.parentNode,gf=new OpenLayers.Format.GML;gf.originalParseFeature=gf.parseFeature;gf.parseFeature=function(node){var feature=gf.originalParseFeature(node);feature.gml.featureType=node.firstElementChild.localName;feature.gml.featureNS=node.firstElementChild.namespaceURI;feature.fid=parseInt(node.firstElementChild.getAttribute("gml:id"));return feature};return gf.read(data)}}});this.me.push(tempTarget);null==this.map.getMapforOpenLayers().getControl(this.convertID(tempID))&&this.map.getMapforOpenLayers().addControl(tempTarget);tempAutoActivate&&tempTarget.activate()};WMSGetFeatureInfo.prototype.deactivate=function(id){if("undefined"!=typeof this.me&&null!=this.me)if("string"==typeof id&&null!=id){var tempTarget=_.findWhere(this.me,{id:this.convertID(id)});if("undefined"!=typeof tempTarget&&null!=tempTarget){this.map.getMapforOpenLayers().removeControl(tempTarget);this.me=_.difference(this.me,[tempTarget]);tempTarget.deactivate();tempTarget.destroy();console.log("control removed :: "+tempTarget.CLASS_NAME)}}else if("undefined"==typeof id){var tempTarget=_.findWhere(this.me,{id:this.convertID(this.defaultId)});if("undefined"!=typeof tempTarget&&null!=tempTarget){this.map.getMapforOpenLayers().removeControl(tempTarget);this.me=_.difference(this.me,[tempTarget]);tempTarget.deactivate();tempTarget.destroy();console.log("control removed :: "+tempTarget.CLASS_NAME)}}else if("boolean"==typeof id&&id){for(var i in this.me){this.me[i].deactivate();this.map.getMapforOpenLayers().removeControl(this.me[i]);this.me[i].destroy()}this.me=[]}};return WMSGetFeatureInfo}(GeoNURIS.BaseControl);GeoNURIS.WMSGetFeatureInfo=WMSGetFeatureInfo}(GeoNURIS||(GeoNURIS={}));define("WMSGetFeatureInfo",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var Marker=function(_super){function Marker(control,map){var _this=this;_super.call(this,control,map,[0,1],"marker");this.mouseEventId="marker_mouse_event";this.dragEventId="marker_drag_event";this.isSearchMode=!1;this.markerGroup=null;this.scope_all="scope-all";this.defaultMarkerId="default";this.markerLayer=new OpenLayers.Layer.Vector("markerLayer",{rendererOptions:{yOrdering:!0},renderers:OpenLayers.Layer.Vector.prototype.renderers,isBaseLayer:!1,eventListeners:{featureclick:function(e){var feature=e.feature;feature.hasOwnProperty("OnClick")&&"function"==typeof feature.OnClick&&null!=feature.OnClick&&feature.OnClick(e);if(null!=feature.popup){var object=e.object;if(!_.contains(object.map.popups,feature.popup)){var map=object.map;feature.popup.lonlat=new OpenLayers.LonLat(feature.geometry.x,feature.geometry.y);if("undefined"!=typeof feature.style&&null!=feature.style){var tempStyle=feature.style;if("number"==typeof tempStyle.graphicXOffset||"number"==typeof tempStyle.graphicYOffset){var oriLonlat=new OpenLayers.LonLat(feature.geometry.x,feature.geometry.y),oriPx=map.getPixelFromLonLat(oriLonlat);"number"==typeof tempStyle.graphicXOffset&&(oriPx.x=oriPx.x+tempStyle.graphicXOffset/2);"number"==typeof tempStyle.graphicYOffset&&(oriPx.y=oriPx.y+tempStyle.graphicYOffset/2);feature.popup.lonlat=map.getLonLatFromPixel(oriPx)}}map.addPopup(feature.popup)}}},nofeatureclick:function(){}}});this.markerLayer.originalCalculateInRange=this.markerLayer.calculateInRange;this.markerLayer.calculateInRange=function(){if(_this.map){var resolution=_this.map.getMapforOpenLayers().getResolution();for(var i in _this.markerGroup){var item=_this.markerGroup[i],inRange=!0;item.alwaysInRange||(inRange=resolution>=item.resolution.min&&resolution<=item.resolution.max);for(var j in item.items){var marker=item.items[j],isProcess=!0;marker.style.hasOwnProperty("isVisible")&&(isProcess=marker.style.isVisible);isProcess&&(marker.style.display=inRange?"visible":"none")}}}return!0};if(null==this.map.getMapforOpenLayers().getLayer(this.markerLayer.id)){this.map.getMapforOpenLayers().addLayer(this.markerLayer);this.markerLayer.setZIndex(5e3)}this.markerGroup=[];this.markerGroup.push({alwaysInRange:!0,id:this.defaultMarkerId,items:[],resolution:{min:this.markerLayer.minResolution,max:this.map.getMapforOpenLayers().getMaxResolution()}})}__extends(Marker,_super);Marker.prototype.enableDrag=function(isDrag,markerGroupId){var targetControl=this.map.getMapforOpenLayers().getControl(this.dragEventId);if(isDrag){this.control.MOUSE.CLICK.deactivate(this.mouseEventId);if(this.isSearchMode){this.isSearchMode=!1;this.control.MEASURE.deactivate()}if("undefined"==typeof targetControl||null==targetControl){targetControl=new OpenLayers.Control.DragFeature(this.markerLayer,{id:this.dragEventId,onComplete:function(feature,pixel){var bounds=feature.geometry.getBounds(),answer="bottom: "+bounds.bottom+"\n";answer+="left: "+bounds.left+"\n";answer+="right: "+bounds.right+"\n";answer+="top: "+bounds.top+"\n";if(null!=feature.popup){var ll=new OpenLayers.LonLat(feature.geometry.x,feature.geometry.y);if("object"==typeof feature.popup.lonlat&&null!=feature.popup.lonlat&&"number"==typeof feature.popup.lonlat.lon&&"number"==typeof feature.popup.lonlat.lat){feature.popup.lonlat.lon=ll.lon;feature.popup.lonlat.lat=ll.lat;feature.popup.updatePosition()}}console.log({tag:"onComplete",f:feature,p:pixel})}});this.map.getMapforOpenLayers().addControl(targetControl)}var targetMarkers=null;if("string"==typeof markerGroupId){var markerInfo=this.getMarkerGroup(markerGroupId);null!=markerInfo&&(targetMarkers=markerInfo.items)}targetControl.onStart=function(feature){null!=targetMarkers&&(_.contains(targetMarkers,feature)||targetControl.cancel())};targetControl.activate()}else if("undefined"!=typeof targetControl&&null!=targetControl){targetControl.deactivate();this.map.getMapforOpenLayers().removeControl(targetControl)}};Marker.prototype.activate=function(mode,options){var _this=this;console.log("marker activate");var tempMode=null;"string"==typeof mode&&(tempMode=UTIL.trim(mode.toLowerCase()));var tempType="box",tempSearchCompleted=null,tempAttribute=null,tempEnabelDrag=!1,tempOnClick=null,tempOnAdded=null,tempOnRight=null,tempAttributes=null,tempPopup=null,tempPointRadius=20,tempIcon="/js/Resource/Img/marker_blue.png",tempOptions={},tempMarkerGroupId=this.defaultMarkerId,tempIsNotBeforeActivate=!1;if("undefined"!=typeof options&&null!=options){var opts=options;"string"==typeof opts.markerGroupId&&(tempMarkerGroupId=opts.markerGroupId);"boolean"==typeof opts.isNotBeforeActivate&&(tempIsNotBeforeActivate=opts.isNotBeforeActivate);"string"==typeof opts.type&&(tempType=opts.type);"function"==typeof opts.searchCompleted&&null!=opts.searchCompleted&&(tempSearchCompleted=opts.searchCompleted);if("object"==typeof opts.attribute&&null!=opts.attribute){var attr=opts.attribute;"string"==typeof attr.name&&null!=attr.name&&"undefined"!=typeof attr.value&&null!=attr.value&&(tempAttribute=attr)}"boolean"==typeof opts.enable&&(tempEnabelDrag=opts.enable);"function"==typeof opts.click&&null!=opts.click&&(tempOnClick=opts.click);"function"==typeof opts.added&&null!=opts.added&&(tempOnAdded=opts.added);"function"==typeof opts.right&&null!=opts.right&&(tempOnRight=opts.right);"object"==typeof opts.attributes&&null!=opts.attributes&&(tempAttributes=opts.attributes);"object"==typeof opts.popup&&null!=opts.popup&&(tempPopup=opts.popup);"undefined"!=typeof opts.icon&&(tempIcon=opts.icon);"number"==typeof opts.pointRadius&&(tempPointRadius=opts.pointRadius);"object"==typeof opts.offSet&&null!=opts.offSet&&(tempOptions.offSet=opts.offSet);"object"==typeof opts.label&&null!=opts.label&&(tempOptions.label=opts.label)}if(null!=tempMode)if("search"==tempMode||"s"==tempMode){this.control.MOUSE.CLICK.deactivate(this.mouseEventId);this.enableDrag(!1);this.isSearchMode=!0;var targetMarkers=null;if(UTIL.trim(tempMarkerGroupId.toLowerCase())!=this.scope_all){var markerInfo=this.getMarkerGroup(tempMarkerGroupId);"undefined"!=typeof markerInfo&&null!=markerInfo&&(targetMarkers=markerInfo.items)}var tempFncEnd=function(evt){var layer=_this.markerLayer,sourceFeatures=layer.features;null!=tempAttribute&&(sourceFeatures=layer.getFeaturesByAttribute(tempAttribute.name,tempAttribute.value));null!=targetMarkers&&(sourceFeatures=_.intersection(sourceFeatures,targetMarkers));var resultFeatures=[];for(var i in sourceFeatures){var srcFeature=sourceFeatures[i],srcGeom=srcFeature.geometry;"function"==typeof srcGeom.intersects&&srcGeom.intersects(evt.geometry)&&resultFeatures.push(srcFeature)}null!=tempSearchCompleted&&tempSearchCompleted(resultFeatures)};this.control.MEASURE.activate({type:tempType,isNotBeforeActivate:!0,persist:!1,fncEnd:tempFncEnd})}else if("drag"==tempMode||"d"==tempMode){UTIL.trim(tempMarkerGroupId.toLowerCase())==this.scope_all&&(tempMarkerGroupId=null);this.enableDrag(tempEnabelDrag,tempMarkerGroupId)}else if("add"==tempMode||"a"==tempMode){if(!tempIsNotBeforeActivate){var types=[0],deactivateTargetControls=this.control.getControlsbyType(types);for(var i in deactivateTargetControls){var target=deactivateTargetControls[i];target.deactivate();console.log(target.name+" deactivated")}}this.enableDrag(!1);if(this.isSearchMode){this.isSearchMode=!1;this.control.MEASURE.deactivate()}var mine=this,map=this.map.getMapforOpenLayers();this.control.MOUSE.CLICK.activate(this.mouseEventId,function(e){var lonlat=map.getLonLatFromPixel(e.xy),tempStyle=mine.createStyle(tempIcon,tempPointRadius,tempOptions);mine.addMarker(lonlat.lon,lonlat.lat,tempStyle,{popup:tempPopup,attributes:tempAttributes,click:tempOnClick,added:tempOnAdded,right:tempOnRight,markerGroupId:tempMarkerGroupId})})}};Marker.prototype.getMarkerGroupIDs=function(){return _.pluck(this.markerGroup,"id")};Marker.prototype.getMarkerGroup=function(id){var markerGroup=_.findWhere(this.markerGroup,{id:UTIL.trim(id.toLowerCase())});"undefined"==typeof markerGroup&&(markerGroup=null);return markerGroup};Marker.prototype.setAlwaysInRange=function(alwaysInRange,markerGroupId){var tempId=this.defaultMarkerId;"string"==typeof markerGroupId&&(tempId=markerGroupId);var markerGroup=this.getMarkerGroup(tempId);null!=markerGroup&&(markerGroup.alwaysInRange=alwaysInRange);this.markerLayer.redraw()};Marker.prototype.setResolution=function(max,min,markerGroupId){var tempId=this.defaultMarkerId;"string"==typeof markerGroupId&&(tempId=markerGroupId);var markerGroup=this.getMarkerGroup(tempId);if(null!=markerGroup){"number"==typeof min&&null!=min&&(markerGroup.resolution.min=min);"number"==typeof max&&null!=max&&(markerGroup.resolution.max=max)}this.markerLayer.redraw()};Marker.prototype.removeAllMarker=function(markerGroupId){var tempId=this.defaultMarkerId;"string"==typeof markerGroupId&&(tempId=markerGroupId);if(UTIL.trim(tempId.toLowerCase())==this.scope_all)this.removeMarker(this.getMarkers());else{var markerGroup=this.getMarkerGroup(tempId);null!=markerGroup&&this.removeMarker(markerGroup.items)}};Marker.prototype.removeMarker=function(marker){var removeTargetFeature=[];if("string"==typeof marker){var temp=this.getMarker(marker);removeTargetFeature.push(temp);this.markerLayer.removeFeatures([temp])}else if("object"==typeof marker&&null!=marker)if(Array.isArray(marker)){removeTargetFeature=marker;this.markerLayer.removeFeatures(marker)}else if(marker instanceof OpenLayers.Feature.Vector){removeTargetFeature.push(marker);this.markerLayer.removeFeatures([marker])}var removeMarkerGroup=[];for(var i in this.markerGroup){var markerGroup=this.markerGroup[i];markerGroup.items=_.difference(markerGroup.items,removeTargetFeature);0==markerGroup.items.length&&removeMarkerGroup.push(markerGroup)}for(var j in removeTargetFeature){var popup=removeTargetFeature[j].popup;"undefined"!=typeof popup&&null!=popup&&this.map.getMapforOpenLayers().removePopup(popup)}this.markerGroup=_.difference(this.markerGroup,removeMarkerGroup)};Marker.prototype.getMarkerIDs=function(markerGroupId){var tempId=this.scope_all;"string"==typeof markerGroupId&&(tempId=markerGroupId);if(UTIL.trim(tempId.toLowerCase())==this.scope_all)return _.pluck(this.markerLayer.features,"id");var markerGroup=this.getMarkerGroup(tempId);return null!=markerGroup?_.pluck(markerGroup.items,"id"):void 0};Marker.prototype.getMarker=function(id){return"string"==typeof id&&null!=id?this.markerLayer.getFeatureById(id):null};Marker.prototype.getMarkerbyAttribute=function(attrName,attrValue,markerGroupId){var resultFeatures=this.markerLayer.getFeaturesByAttribute(attrName,attrValue);if("string"==typeof markerGroupId&&null!=markerGroupId){var markerGroup=this.getMarkerGroup(markerGroupId);null!=markerGroup&&(resultFeatures=_.intersection(resultFeatures,markerGroup.items))}return resultFeatures};Marker.prototype.setMarkerVisiblebyGroup=function(isVisible,markerGroupId){var tempMarkerGroupId=this.defaultMarkerId;"string"==typeof markerGroupId&&null!=markerGroupId&&(tempMarkerGroupId=markerGroupId);var markerGroup=this.getMarkerGroup(tempMarkerGroupId);null!=markerGroup&&this.setMarkerVisible(markerGroup.items,isVisible)};Marker.prototype.setMarkerVisible=function(marker,isVisible){if("undefined"!=typeof marker&&null!=marker&&"boolean"==typeof isVisible&&null!=isVisible){if(Array.isArray(marker))for(var i in marker){var item=marker[i];if("string"==typeof item){this.getMarker(item).style.display=isVisible?"visible":"none";this.getMarker(item).style.isVisible=isVisible}else{item.style.display=isVisible?"visible":"none";item.style.isVisible=isVisible}}else if("string"==typeof marker){this.getMarker(marker).style.display=isVisible?"visible":"none";this.getMarker(marker).style.isVisible=isVisible}else{marker.style.display=isVisible?"visible":"none";marker.style.isVisible=isVisible}if(isVisible){var resolution=this.map.getMapforOpenLayers().getResolution();for(var i in this.markerGroup){var markerGroup=this.markerGroup[i];if(!markerGroup.alwaysInRange){var inRange=resolution>=markerGroup.resolution.min&&resolution<=markerGroup.resolution.max;
if(!inRange)for(var j in markerGroup.items){var marker=markerGroup.items[j];marker.style.display="none"}}}}this.markerLayer.redraw()}};Marker.prototype.getMarkers=function(options){var targetGeom=null;if("object"==typeof options&&null!=options){var resultFeatures=this.markerLayer.features,opts=options;if("object"==typeof opts.attribute&&null!=opts.attribute){var attr=opts.attribute;"string"==typeof attr.name&&null!=attr.name&&"undefined"!=typeof attr.value&&null!=attr.value&&(resultFeatures=this.markerLayer.getFeaturesByAttribute(attr.name,attr.value))}if("string"==typeof opts.markerGroupId&&null!=opts.markerGroupId){var markerGroupId=opts.markerGroupId;if(markerGroupId!=this.scope_all){var markerGroup=this.getMarkerGroup(markerGroupId);null!=markerGroup&&(resultFeatures=_.intersection(resultFeatures,markerGroup.items))}}if("undefined"!=typeof opts.geom&&null!=opts.geom){targetGeom=opts.geom;var tempFeatures=[];for(var i in resultFeatures){var srcFeature=resultFeatures[i],srcGeom=srcFeature.geometry;"function"==typeof srcGeom.intersects&&srcGeom.intersects(targetGeom)&&tempFeatures.push(srcFeature)}return tempFeatures}return resultFeatures}return this.markerLayer.features};Marker.prototype.addMarker=function(lon,lat,style,options){var tempAttributes=null,tempOnClick=null,tempOnAdded=null,tempOnRight=null,tempPopup=null,tempId=this.defaultMarkerId;if("object"==typeof options&&null!=options){var opts=options;"string"==typeof opts.markerGroupId&&null!=opts.markerGroupId&&(tempId=opts.markerGroupId);if("object"==typeof opts.popup&&null!=opts.popup){var popup=opts.popup;if("undefined"!=typeof popup.content&&null!=popup.content){var type=popup.type,content=null,id=null,popupOpt=null;"undefined"!=typeof popup.content&&null!=popup.content&&(content=popup.content);"string"==typeof popup.id&&null!=popup.id&&(id=popup.id);"object"==typeof popup.options&&null!=popup.options&&(popupOpt=popup.options);tempPopup=this.createPopup(content,type,id,popupOpt)}}"object"==typeof opts.attributes&&null!=opts.attributes&&(tempAttributes=opts.attributes);"function"==typeof opts.click&&null!=opts.click&&(tempOnClick=opts.click);"function"==typeof opts.added&&null!=opts.added&&(tempOnAdded=opts.added);"function"==typeof opts.right&&null!=opts.right&&(tempOnRight=opts.right)}var markerFeature=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(lon,lat),tempAttributes,style);markerFeature.OnClick=tempOnClick;markerFeature.setLabel=function(label){if("string"==typeof label)markerFeature.style.label=label;else if("object"==typeof label&&null!=label){var lb=label;"string"==typeof lb.text&&(markerFeature.style.label=lb.text);"number"==typeof lb.x&&(markerFeature.style.labelXOffset=lb.x);"number"==typeof lb.y&&(markerFeature.style.labelYOffset=lb.y)}markerFeature.layer.redraw()};markerFeature.setIcon=function(uri){if("string"==typeof uri)markerFeature.style.externalGraphic=uri;else if("object"==typeof uri&&null!=uri){var symbol=uri,isChange=!1;if("string"==typeof symbol.fillColor){markerFeature.style.fillColor=symbol.fillColor;isChange=!0}if("string"==typeof symbol.strokeColor){markerFeature.style.strokeColor=symbol.strokeColor;isChange=!0}if("number"==typeof symbol.strokeWidth){markerFeature.style.strokeWidth=symbol.strokeWidth;isChange=!0}isChange&&(markerFeature.style.externalGraphic="")}markerFeature.layer.redraw()};markerFeature.setPointRadius=function(size){markerFeature.style.pointRadius=size;markerFeature.layer.redraw()};null!=tempPopup&&(markerFeature.popup=tempPopup);var markerInfo=this.getMarkerGroup(tempId);if(null==markerInfo){markerInfo={alwaysInRange:!0,id:UTIL.trim(tempId.toLowerCase()),items:[],resolution:{min:this.markerLayer.minResolution,max:this.map.getMapforOpenLayers().getMaxResolution()}};this.markerGroup.push(markerInfo)}markerInfo.items.push(markerFeature);this.markerLayer.addFeatures(markerFeature);"function"==typeof tempOnRight&&null!=tempOnRight&&$(document).on("contextmenu","#"+markerFeature.geometry.id,function(e){e.feature=markerFeature;return tempOnRight(e)});null!=tempOnAdded&&tempOnAdded(markerFeature)};Marker.prototype.createPopup=function(content,type,id,options){var tempId="popup",tempType="popup",tempLonlat=null,tempSize=null,tempContent=null,tempIsClose=!1,tempCloseCallBack=null;"undefined"!=typeof content&&(tempContent=content);"string"==typeof type&&null!=type&&(tempType=UTIL.trim(type.toLowerCase()));"string"==typeof id&&null!=id&&(tempId=UTIL.trim(id));if("object"==typeof options&&null!=options){var opt=options;"boolean"==typeof opt.isClose&&opt.isClose&&(tempIsClose=opt.isClose);"function"==typeof opt.closeCallback&&null!=opt.closeCallback&&tempIsClose?tempCloseCallBack=function(e){opt.closeCallback(e);this.map.removePopup(this)}:"undefined"==typeof opt.closeCallback&&tempIsClose&&(tempCloseCallBack=function(){this.map.removePopup(this)});if("object"==typeof opt.lonlat&&null!=opt.lonlat){var lonlat=opt.lonlat;"number"==typeof lonlat.lon&&"number"==typeof lonlat.lat&&(tempLonlat=new OpenLayers.LonLat(lonlat.lon,lonlat.lat))}if("object"==typeof opt.size&&null!=opt.size){var size=opt.size;"number"==typeof size.width&&"number"==typeof size.height&&(tempSize=new OpenLayers.Size(size.width,size.height))}}var popup=null;"popup"==tempType||"p"==tempType?popup=new OpenLayers.Popup(_.uniqueId(tempId),tempLonlat,tempSize,tempContent,tempIsClose,tempCloseCallBack):"anchored"==tempType||"a"==tempType?popup=new OpenLayers.Popup.Anchored(_.uniqueId(tempId),tempLonlat,tempSize,tempContent,null,tempIsClose,tempCloseCallBack):("framedcloud"==tempType||"f"==tempType)&&(popup=new OpenLayers.Popup.FramedCloud(_.uniqueId(tempId),tempLonlat,tempSize,tempContent,null,tempIsClose,tempCloseCallBack));return popup};Marker.prototype.createStyle=function(icon,pointRadius,options){var style={};style.graphicZIndex=11;style.pointRadius=10;"number"==typeof pointRadius&&(style.pointRadius=pointRadius);if("object"==typeof options&&null!=options){var opt=options;if("object"==typeof opt.label&&null!=opt.label){var label=opt.label;"string"==typeof label.text&&(style.label=label.text);"number"==typeof label.size&&(style.fontSize=label.size);if("object"==typeof label.offSet&&null!=label.offSet){var offSet=label.offSet;"number"==typeof offSet.x&&(style.labelXOffset=offSet.x);"number"==typeof offSet.y&&(style.labelYOffset=offSet.y)}if("object"==typeof label.font&&null!=label.font){var font=label.font;"string"==typeof font.weight&&(style.fontWeight=font.weight);"string"==typeof font.color&&(style.fontColor=font.color);if("object"==typeof font.outline&&null!=font.outline){var outline=font.outline;"string"==typeof outline.color&&(style.labelOutlineColor=outline.color);"number"==typeof outline.width&&(style.labelOutlineWidth=outline.width)}}}if("object"==typeof opt.offSet&&null!=opt.offSet){var offSet=opt.offSet;"number"==typeof offSet.x&&(style.graphicXOffset=-1*style.pointRadius+offSet.x);"number"==typeof offSet.y&&(style.graphicYOffset=-1*style.pointRadius+offSet.y)}}if("string"==typeof icon)style.externalGraphic=icon;else if("object"==typeof icon&&"string"==typeof icon.fillColor){style.fillColor=icon.fillColor;"string"==typeof icon.strokeColor&&(style.strokeColor=icon.strokeColor);"number"==typeof icon.strokeWidth&&(style.strokeWidth=icon.strokeWidth)}return style};Marker.prototype.deactivate=function(){this.control.MOUSE.CLICK.deactivate(this.mouseEventId);this.enableDrag(!1);if(this.isSearchMode){this.isSearchMode=!1;this.control.MEASURE.deactivate()}};return Marker}(GeoNURIS.BaseControl);GeoNURIS.Marker=Marker}(GeoNURIS||(GeoNURIS={}));define("Marker",function(){});var __extends=this.__extends||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);__.prototype=b.prototype;d.prototype=new __},GeoNURIS;!function(GeoNURIS){var Toolbar=function(_super){function Toolbar(control,map){_super.call(this,control,map,[2],"toolbar");var css=".olControlPanel { margin-top:6px; padding-right:8px; right:0px; display:table; background-color:rgba(44,47,52,.7); }";css=css+" "+".olControlNoSelect { }";css=css+" "+".olButton { height:38px; padding:0px; margin:0px; border:hidden; display:table-cell; vertical-align:middle; }";UTIL.appendStyle(css);var oMap=this.map.getMapforOpenLayers(),controls=this.control,toolbarSelf=this;this.toggleBtn=new OpenLayers.Control.Button({displayClass:"ToolbarToggle",imgSrc:"/js/resource/Img/close.png",trigger:function(){for(var idx in toolbarSelf.subControls){var item=toolbarSelf.subControls[idx],pDiv=item.panel_div;if("toolbartoggle"==item.displayClass.toLowerCase()){var img=pDiv.children[0];img.src=img.src.lastIndexOf("close.png")>=0?"/js/resource/Img/open.png":"/js/resource/Img/close.png"}else pDiv.style.display=""==pDiv.style.display?"none":""}}});this.subControls=[this.toggleBtn,new OpenLayers.Control.Button({displayClass:"FullExtent",imgSrc:"/js/resource/Img/full_extent.png",trigger:function(){oMap.zoomToMaxExtent()}}),new OpenLayers.Control.Button({displayClass:"FixedZoomIn",imgSrc:"/js/resource/Img/fixed_zoom_in.png",trigger:function(){oMap.zoomIn()}}),new OpenLayers.Control.Button({displayClass:"FixedZoomOut",imgSrc:"/js/resource/Img/fixed_zoom_out.png",trigger:function(){oMap.zoomOut()}}),new OpenLayers.Control.Button({displayClass:"ZoomIn",imgSrc:"/js/resource/Img/zoom_in.png",trigger:function(){controls.ZOOMBOX_IN.activate()}}),new OpenLayers.Control.Button({displayClass:"ZoomOut",imgSrc:"/js/resource/Img/zoom_out.png",trigger:function(){controls.ZOOMBOX_OUT.activate()}}),new OpenLayers.Control.Button({displayClass:"Pan",imgSrc:"/js/resource/Img/pan.png",trigger:function(){controls.NAVIGATION.activate({all:!0})}}),new OpenLayers.Control.Button({displayClass:"PrevExtent",imgSrc:"/js/resource/Img/prev_extent.png",trigger:function(){controls.NAVIGATIONHISTORY.activate()}}),new OpenLayers.Control.Button({displayClass:"NextExtent",imgSrc:"/js/resource/Img/next_extent.png",trigger:function(){controls.NAVIGATIONHISTORY.activate(!0)}}),new OpenLayers.Control.Button({displayClass:"Length",imgSrc:"/js/resource/Img/length.png",trigger:function(){controls.MEASURE.activate({type:"l",visibleResult:!0})}}),new OpenLayers.Control.Button({displayClass:"Area",imgSrc:"/js/resource/Img/area.png",trigger:function(){controls.MEASURE.activate({type:"p",visibleResult:!0})}})]}__extends(Toolbar,_super);Toolbar.prototype.toggleToolbar=function(){"undefined"!=typeof this.toggleBtn&&null!=this.toggleBtn&&this.toggleBtn.trigger()};Toolbar.prototype.setActivateButton=function(buttonName){if("undefined"!=typeof this.subControls&&null!=this.subControls)for(var key in this.subControls){var button=this.subControls[key],buttonDpCls=button.displayClass.toLowerCase();if(button.hasOwnProperty("panel_div")){var panel=button.panel_div,img=panel.children[0];if(button.hasOwnProperty("imgSrc")){var imgSrc=button.imgSrc;img.src="zoomin"==buttonName.toLowerCase()&&"zoomin"==buttonDpCls||"zoomout"==buttonName.toLowerCase()&&"zoomout"==buttonDpCls||"navigation"==buttonName.toLowerCase()&&"pan"==buttonDpCls?imgSrc.replace(".png","_cl.png"):imgSrc}}}};Toolbar.prototype.activate=function(){console.log("toolBar activate");this.deactivate();this.me=new OpenLayers.Control.Panel({defaultControl:null,createControlMarkup:function(control){var output=document.createElement("button"),img=document.createElement("img");img.src=control.imgSrc;output.appendChild(img);if("toolbartoggle"!=control.displayClass.toLowerCase()){output.style.paddingLeft="8px";output.style.backgroundColor="transparent"}else{output.style.borderRight="1px solid #2c2f34";var browser=UTIL.getBrowserInfo();if(browser.firefox){img.style.marginTop="-1px";img.style.marginLeft="-5px";img.style.marginRight="-3px"}}return output}});this.me.addControls(this.subControls);this.map.getMapforOpenLayers().addControl(this.me);this.me.activate()};Toolbar.prototype.deactivate=function(){if("undefined"!=typeof this.me&&null!=this.me){var oMap=this.map.getMapforOpenLayers();for(var key in this.me.controls){var item=this.me.controls[key];oMap.removeControl(item)}this.map.getMapforOpenLayers().removeControl(this.me);this.me.deactivate()}};return Toolbar}(GeoNURIS.BaseControl);GeoNURIS.Toolbar=Toolbar}(GeoNURIS||(GeoNURIS={}));define("Toolbar",function(){});var GeoNURIS;!function(GeoNURIS){var Control=function(){function Control(map){this.NAVIGATION=new GeoNURIS.Navigation(this,map);this.ZOOMBOX=new GeoNURIS.ZoomBox(this,map);this.ZOOMBOX_IN=new GeoNURIS.ZoomBox(this,map);this.ZOOMBOX_OUT=new GeoNURIS.ZoomBoxOut(this,map);this.NAVIGATIONHISTORY=new GeoNURIS.NavigationHistory(this,map);this.MOUSEPOSITION=new GeoNURIS.MousePosition(this,map);this.SCALELINE=new GeoNURIS.ScaleLine(this,map);this.PANZOOMBAR=new GeoNURIS.PanZoomBar(this,map);this.NAVTOOLBAR=new GeoNURIS.NavToolbar(this,map);this.MEASURE=new GeoNURIS.Measure(this,map);this.GETFEATURE=new GeoNURIS.GetFeature(this,map);this.DRAWFEATURE=new GeoNURIS.DrawFeature(this,map);this.WMSGETFEATUREINFO=new GeoNURIS.WMSGetFeatureInfo(this,map);this.SELECTFEATURE=new GeoNURIS.SelectFeature(this,map);this.MARKER=new GeoNURIS.Marker(this,map);this.MOUSE=new GeoNURIS.Mouse(this,map);this.TOOLBAR=new GeoNURIS.Toolbar(this,map);this.DRAWFEATURE.activate("a","l");this.DRAWFEATURE.deactivate()}Control.prototype.getControlsbyType=function(filter,isOR){var base=_.chain(this).filter(function(obj){return obj instanceof GeoNURIS.BaseControl});"undefined"!=typeof filter&&null!=filter&&(base=base.filter(function(obj){return isOR?_.difference(obj.type,filter).length<obj.type.length:0==_.difference(filter,obj.type).length}));return base.value()};return Control}();GeoNURIS.Control=Control}(GeoNURIS||(GeoNURIS={}));define("Control",function(){});var GeoNURIS;!function(GeoNURIS){var Map=function(){function Map(mapDiv,options){var mapOptions={units:"m",controls:[],allOverlays:!0};if("undefined"!=typeof options&&null!=options){var opts=options;if("object"==typeof opts.mapOptions&&null!=opts.mapOptions)for(var key in opts.mapOptions)"controls"!=key&&(mapOptions[key]=opts.mapOptions[key])}this.map=new OpenLayers.Map(mapDiv,mapOptions);this.map.Z_INDEX_BASE.Popup=1e4;this.toc=new GeoNURIS.TOC(this);var tempEnableToolbar=!0;if("undefined"!=typeof options&&null!=options){var opts=options;"string"==typeof opts.proxyHost&&null!=opts.proxyHost&&(OpenLayers.ProxyHost=opts.proxyHost);"undefined"!=typeof opts.serverInfos&&null!=opts.serverInfos&&(this.toc=new GeoNURIS.TOC(this,opts.serverInfos));"boolean"!=typeof opts.enableToolbar||opts.enableToolbar||(tempEnableToolbar=options.enableToolbar)}null!=this.map.baseLayer&&this.map.zoomToMaxExtent();this.controls=new GeoNURIS.Control(this);if(tempEnableToolbar){this.controls.TOOLBAR.activate();this.controls.TOOLBAR.toggleToolbar()}}Map.prototype.addService=function(service){service.serverInfo.autoVisible||service.getServiceLayer().setVisibility(!1);this.map.addLayer(service.getServiceLayer());if(service instanceof GeoNURIS.CustomService){(null==this.map.baseLayer||this.toc.getServices().length<=1)&&this.map.setBaseLayer(service.getServiceLayer());if(this.map.baseLayer.name.toLowerCase().indexOf("vmap")>=0){var oMap=this.map;this.map.tempZoomToMaxExtent=this.map.zoomToMaxExtent;this.map.zoomToMaxExtent=function(){oMap.baseLayer.name.toLowerCase().indexOf("vmap")>=0?oMap.zoomToExtent(new OpenLayers.Bounds(13342969.120808,3620179.1242833,15023360.750396,5076763.1350829),!0):oMap.tempZoomToMaxExtent()}}this.map.zoomToMaxExtent()}service.getServiceLayer().redraw()};Map.prototype.removeService=function(service){this.map.removeLayer(service.getServiceLayer())};Map.prototype.getMapforOpenLayers=function(){return this.map};return Map}();GeoNURIS.Map=Map}(GeoNURIS||(GeoNURIS={}));define("GeoNURIS",["underscore","OpenLayers","jQuery","UTIL","contextMenu","ServerInfo","CustomServerInfo","BaseLayer","Layer","GroupLayer","Service","CustomService","TOC","Style","BaseControl","Mouse","Navigation","ZoomBox","NavigationHistory","MousePosition","ScaleLine","PanZoomBar","NavToolbar","Measure","GetFeature","DrawFeature","SelectFeature","WMSGetFeatureInfo","Marker","Mouse","Toolbar","Control"],function(global){return function(){var ret;return ret||global.geonuris}}(this));requirejs.config({baseUrl:"/js",paths:{underscore:"underscore/underscore",OpenLayers:"OpenLayers/OpenLayers.debug",jQuery:"jQuery/jquery-1.10.2",UTIL:"UTIL/UTIL",contextMenu:"UTIL/contextMenu",GeoNURIS:"GeoNURIS/Map",ServerInfo:"GeoNURIS/ServerInfo",CustomServerInfo:"GeoNURIS/CustomServerInfo",TOC:"GeoNURIS/TOC",Service:"GeoNURIS/Service",CustomService:"GeoNURIS/CustomService",BaseLayer:"GeoNURIS/BaseLayer",Layer:"GeoNURIS/Layer",GroupLayer:"GeoNURIS/GroupLayer",Style:"GeoNURIS/Style",Control:"GeoNURIS/Control",BaseControl:"GeoNURIS/Controls/BaseControl",Navigation:"GeoNURIS/Controls/Navigation",ZoomBox:"GeoNURIS/Controls/ZoomBox",NavigationHistory:"GeoNURIS/Controls/NavigationHistory",MousePosition:"GeoNURIS/Controls/MousePosition",ScaleLine:"GeoNURIS/Controls/ScaleLine",PanZoomBar:"GeoNURIS/Controls/PanZoomBar",NavToolbar:"GeoNURIS/Controls/NavToolbar",Measure:"GeoNURIS/Controls/Measure",GetFeature:"GeoNURIS/Controls/GetFeature",DrawFeature:"GeoNURIS/Controls/DrawFeature",WMSGetFeatureInfo:"GeoNURIS/Controls/WMSGetFeatureInfo",SelectFeature:"GeoNURIS/Controls/SelectFeature",Marker:"GeoNURIS/Controls/Marker",Mouse:"GeoNURIS/Controls/Mouse",Toolbar:"GeoNURIS/Controls/Toolbar"},shim:{GeoNURIS:{deps:["underscore","OpenLayers","jQuery","UTIL","contextMenu","ServerInfo","CustomServerInfo","BaseLayer","Layer","GroupLayer","Service","CustomService","TOC","Style","BaseControl","Mouse","Navigation","ZoomBox","NavigationHistory","MousePosition","ScaleLine","PanZoomBar","NavToolbar","Measure","GetFeature","DrawFeature","SelectFeature","WMSGetFeatureInfo","Marker","Mouse","Toolbar","Control"],exports:"geonuris"}}});requirejs(["GeoNURIS"],function(){console.log("script loaded");if("function"==typeof ginit){var body=document.getElementsByTagName("body")[0];body.addEventListener("load",ginit(),!1)}});define("main",function(){});